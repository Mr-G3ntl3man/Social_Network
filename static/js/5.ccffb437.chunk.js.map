{"version":3,"sources":["image/defaultAvatar.jpg","components/GeneralChat/chat.module.scss","components/GeneralChat/Chat.tsx"],"names":["module","exports","ws","WebSocket","Chat","props","useState","messages","setMessages","useEffect","listener","e","newMess","JSON","parse","data","state","addEventListener","removeEventListener","usersMessages","map","el","className","s","userMess","to","avatar","src","photo","defaultAvatar","size","userText","userName","message","userID","myMess","myText","mainWrap","messageWrap","addMess","fullWidth","label","margin","variant","multiline","minRows","maxRows","style","fontFamily","color"],"mappings":"kHAAe,QAA0B,2C,oBCCzCA,EAAOC,QAAU,CAAC,SAAW,uBAAuB,QAAU,sBAAsB,SAAW,uBAAuB,OAAS,qBAAqB,SAAW,uBAAuB,OAAS,qBAAqB,YAAc,0BAA0B,OAAS,uB,6KCM/PC,EAAK,IAAIC,UAAU,gEASZC,EAAiB,SAACC,GAAW,IAAD,EACNC,mBAAyB,IADnB,mBAC/BC,EAD+B,KACrBC,EADqB,KAGtCC,qBAAU,WACP,IAAMC,EAAW,SAACC,GACf,IAAMC,EAAUC,KAAKC,MAAMH,EAAEI,MAC7BP,GAAY,SAAAQ,GAAK,4BAAQA,GAAR,CAAeJ,QAMnC,OAHAV,EAAGe,iBAAiB,UAAWP,GAGxB,kBAAMR,EAAGgB,oBAAoB,UAAWR,MAC/C,IAGH,IAAMS,EAAgBZ,EAASa,KAAI,SAACC,GACjC,OACG,sBAAqBC,UAAWC,IAAEC,SAAlC,UACG,8BACG,cAAC,IAAD,CAAMC,GAAI,WAAV,SACG,cAAC,IAAD,CAAQH,UAAWC,IAAEG,OAAQC,IAAKN,EAAGO,OAASC,IAAeC,KAAM,cAGzE,oBAAGR,UAAWC,IAAEQ,SAAhB,UACG,8BAAMV,EAAGW,WACRX,EAAGY,aARAZ,EAAGa,WAeA3B,EAASa,KAAI,SAACC,GAC9B,OACG,qBAAqBC,UAAWC,IAAEY,OAAlC,SACG,mBAAGb,UAAWC,IAAEa,OAAhB,+NADOf,EAAGa,WAWnB,OACG,sBAAKZ,UAAWC,IAAEc,SAAlB,UACG,qBAAKf,UAAWC,IAAEe,YAAlB,SACInB,IAOJ,sBAAKG,UAAWC,IAAEgB,QAAlB,UACG,cAAC,IAAD,CACGC,WAAS,EACTC,MAAO,gBACPC,OAAQ,SACRC,QAAS,WACTC,WAAS,EACTC,QAAS,EACTC,QAAS,KAGZ,cAAC,IAAD,CACGC,MAAO,CACJC,WAAW,gCAEdL,QAAS,YACTM,MAAM,UALT,iCAYG7C","file":"static/js/5.ccffb437.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/defaultAvatar.153ee148.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrap\":\"chat_mainWrap__4IgBi\",\"addMess\":\"chat_addMess__1co1R\",\"userMess\":\"chat_userMess__3hGtu\",\"myMess\":\"chat_myMess__2F2_o\",\"userText\":\"chat_userText__2Gmag\",\"myText\":\"chat_myText__SIBSi\",\"messageWrap\":\"chat_messageWrap__2n3tL\",\"avatar\":\"chat_avatar__269cD\"};","import React, {useEffect, useState} from \"react\";\r\nimport s from './chat.module.scss'\r\nimport {Avatar} from \"antd\";\r\nimport defaultAvatar from '../../image/defaultAvatar.jpg'\r\nimport {Button, TextField} from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\n\r\ntype ChatMessageT = {\r\n   message: string\r\n   photo: string\r\n   userID: number\r\n   userName: string\r\n}\r\n\r\nexport const Chat: React.FC = (props) => {\r\n   const [messages, setMessages] = useState<ChatMessageT[]>([])\r\n\r\n   useEffect(() => {\r\n      const listener = (e: MessageEvent<any>) => {\r\n         const newMess = JSON.parse(e.data)\r\n         setMessages(state => [...state, newMess])\r\n      }\r\n\r\n      ws.addEventListener('message', listener)\r\n\r\n\r\n      return () => ws.removeEventListener('message', listener)\r\n   }, [])\r\n\r\n\r\n   const usersMessages = messages.map((el) => {\r\n      return (\r\n         <div key={el.userID} className={s.userMess}>\r\n            <div>\r\n               <Link to={'/profile'}>\r\n                  <Avatar className={s.avatar} src={el.photo || defaultAvatar} size={'large'}/>\r\n               </Link>\r\n            </div>\r\n            <p className={s.userText}>\r\n               <div>{el.userName}</div>\r\n               {el.message}\r\n            </p>\r\n         </div>\r\n      )\r\n\r\n   })\r\n\r\n   const myMessages = messages.map((el) => {\r\n      return (\r\n         <div key={el.userID} className={s.myMess}>\r\n            <p className={s.myText}>\r\n               Lorem ipsum dolor sit amet, consectetur adipisicing elit. Accusamus ad aliquam aut delectus esse harum\r\n               id\r\n               impedit in inventore iusto, labore necessitatibus nobis, obcaecati odio perferendis qui quia quod sed.\r\n            </p>\r\n         </div>\r\n      )\r\n\r\n   })\r\n\r\n   return (\r\n      <div className={s.mainWrap}>\r\n         <div className={s.messageWrap}>\r\n            {usersMessages}\r\n            {/*{myMessages}*/}\r\n            {/*{messages}*/}\r\n            {/*{myMessages}*/}\r\n\r\n         </div>\r\n\r\n         <div className={s.addMess}>\r\n            <TextField\r\n               fullWidth\r\n               label={'Write message'}\r\n               margin={\"normal\"}\r\n               variant={'outlined'}\r\n               multiline\r\n               minRows={1}\r\n               maxRows={10}\r\n            />\r\n\r\n            <Button\r\n               style={{\r\n                  fontFamily: `Mochiy Pop P One, sans-serif`\r\n               }}\r\n               variant={\"contained\"}\r\n               color=\"primary\"\r\n            >Send message</Button>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Chat"],"sourceRoot":""}