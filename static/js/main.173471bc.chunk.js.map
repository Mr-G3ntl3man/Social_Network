{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.scss","components/common/ButtonBurger/burger.module.scss","App.module.scss","components/Profile/Profile.module.css","components/Header/Header.module.scss","components/common/NotFound/notFound.module.scss","redux/reducer/users-reducer.ts","api/chat-api.ts","redux/reducer/chat-reducer.ts","components/common/Tooltip/Tooltip.tsx","components/common/Preloader/preloader.module.css","components/Login/form.module.scss","api/api.ts","components/SpotifyMusic/music.module.scss","redux/reducer/app-reducer.ts","components/common/NeonBtn/btn.module.scss","redux/reducer/dialog-reducer.ts","components/common/ButtonBurger/ButtonBurger.tsx","components/Sidebar/Sidebar.tsx","components/Header/Header.tsx","App.tsx","reportWebVitals.ts","redux/redux-store.ts","index.tsx","redux/reducer/profile-reducer.ts","redux/reducer/localStorage/localStorage.ts","redux/reducer/spotify-reducer.ts","components/Sidebar/Sidebar.module.scss","Router/Routes.tsx","components/common/NeonBtn/NeonBtn.tsx","image/rocket.png","components/StartPage/StartPage.tsx","components/Login/LoginForm.tsx","components/Profile/ProfileInfo/ProfileContact.tsx","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/ProfileInfo/ProfileInfoEditForm.tsx","components/Profile/ProfileInfo/ProfileDesc.tsx","redux/selectors/profile-selector.ts","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","components/common/NotFound/NotFound.tsx","image/SpotifyIcon.svg","components/SpotifyMusic/LoginSpotify.tsx","components/SpotifyMusic/SearchResult.tsx","components/SpotifyMusic/PlayerSpotify.tsx","image/Spotify.svg","components/SpotifyMusic/Dashboard.tsx","components/SpotifyMusic/useAuth.ts","components/SpotifyMusic/Music.tsx","api/spotify-api.ts","components/StartPage/homePage.module.scss","components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Profile/MyPosts/Post/Post.module.scss","components/common/Preloader/Preloader.tsx","redux/reducer/auth-reducer.ts"],"names":["module","exports","ACTION_TYPE_USERS","initialState","users","pageSize","totalUserCount","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","TOGGLE_FOLLOW","map","el","id","userId","followed","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","totalUsersCount","TOGGLE_IS_FETCHING","SET_IS_FOLLOWING_PROGRESS","filter","SET_PAGE_SIZE","setCurrentPage","toggleIsFetchingAC","toggleFollowingProgress","getUsers","dispatch","a","usersAPI","response","items","totalCount","followUnfollow","userID","apiMethod","resultCode","RESULT_CODE","SUCCESSFULLY","installCaughtError","messages","followSuccess","followUser","unFollowSuccess","unFollow","Events","ACTION_TYPE_CHAT","WS_STATUS","ws","subscribes","MESSAGES_RECEIVED","STATUS_CHANGED","notifyAboutStatusS","status","forEach","s","openHandler","READY","errorHandler","ERROR","closeHandler","PENDING","setTimeout","createChannel","messageHandler","e","newMessages","JSON","parse","data","cleanUp","removeEventListener","close","WebSocket","addEventListener","chatApi","callback","push","message","send","error","chatReducer","payload","m","v1","index","array","length","newMessHandler","mess","newStatusHandler","statusChanged","subscribeMessageHandler","subscribeStatusHandler","startMessagesListening","stopMessagesListening","sendMessage","Tooltip","props","severity","anchorOrigin","open","useState","openTooltip","setOpenTooltip","handleClose","autoHideDuration","onClose","style","fontFamily","letterSpacing","variant","instance","axios","create","withCredentials","baseURL","headers","get","then","post","delete","profileAPI","getProfile","getStatus","updateStatus","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","getUserData","login","date","logout","securityApi","getCaptchaUrl","ACTION_TYPE_APP","initialized","catchError","messageError","appReducer","SUCCESSFUL_INITIALIZATION","CATCH_ERROR","initializedApp","Promise","all","ACTION_TYPE_DIALOGS","ButtonBurger","setOpen","finalClassName","header__burger","onClick","toggleOpenMenu","className","header__line","Sidebar","authorizedUser","useSelector","auth","userData","collapsed","setCollapsed","scrollDistance","setScrollDistance","onClickHandler","listenerScroll","window","scrollY","listenerResize","innerWidth","fixedSideBarClassName","fixedSideBar","fixed","useEffect","Sider","trigger","collapsible","layoutHidden","onCollapse","sideBarTrigger","theme","mode","Item","icon","ProfileOutlined","to","PATH","HOME","UserOutlined","USERS","CommentOutlined","CHAT","CustomerServiceOutlined","SPOTIFY_MUSIC","Header","navigate","useNavigate","useDispatch","authDate","avatar","photo","makeStyles","default","marginLeft","header","src","small","size","loginBlock","Button","color","LOGIN","App","app","Content","Layout","Footer","catchUnhandledRejection","useCallback","reason","layoutSider","minHeight","margin","siteLayout","content","footer","vertical","horizontal","Preloader","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","dialogs","name","newMessage","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","UPDATE_NEW_MESSAGE","ADD_MESSAGE","newMess","usersPage","authReducer","chat","spotify","spotifyReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","ACTION_TYPE_PROFILE","saveState","key","stateAsString","stringify","localStorage","setItem","restoreState","defaultState","getItem","posts","newPostText","ADD_POST","stateCopy","likesCount","UPDATE_NEW_POST","newText","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO","photos","SET_LIKE","p","like","GET_USER_POST","DELETE_POST","addPostAC","changeTextAC","setStatusAC","setLikeSuccess","setLike","deletePostSuccess","deletePost","setUserProfile","file","getState","ACTION_TYPE_SPOTIFY","token","accessToken","refreshToken","expiresIn","dashboard","search","lyrics","searchResults","playingTrack","recommendedTracks","SET_IS_FETCHING","SET_TOKEN_INFO","REFRESH_TOKEN_INFO","SET_LYRICS","SET_SEARCH","SET_CHOOSE_TRACK","track","SET_SEARCH_RESULTS","SET_RECOMMENDED_TRACKS","playlist","refreshTokenInfo","setSearchResults","setLoadingData","setSearch","loginTokenSpotify","code","spotifyAPI","loginToken","Error","refreshTokenSpotify","setChooseTrack","chooseTrack","setLyricsOfPlayingSong","title","artist","getLyrics","setTracks","smallestAlbumImage","album","images","reduce","smallest","image","height","artists","uri","albumUrl","url","getSearchResults","cancelSearch","searchTracks","res","body","tracks","getRecommendedTracks","getRecommended","NeonBtn","callBack","link","goAnotherSite","href","btn","line","lineTop","lineLeft","lineRight","lineBottom","URLSearchParams","location","StartPage","isAuth","replace","wrap","mainTitle","rocket","alt","desc","descTeh","accountCredentials","testInfo","btnGroup","target","LoginForm","statusMessages","resultStatusMessage","captchaUrl","schema","yup","shape","email","required","password","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","useStyles","position","display","justifyContent","flexDirection","alignItems","container","padding","Container","Snackbar","width","noValidate","onSubmit","TextField","fullWidth","helperText","label","autoComplete","FormControlLabel","alignSelf","control","Checkbox","marginBottom","textAlign","captcha","LoginPage","ProfileContact","profileContact","contactTitle","profileContactList","profileContactItem","contacts","facebook","linkFacebook","defaultLink","linkNone","vk","linkVk","twitter","linkTwitter","instagram","linkInstagram","youtube","linkYoutube","github","linkGithub","mainLink","linkMainLink","website","linkWebsite","ProfileStatus","editMode","setState","statusUser","editBlock","autoFocus","multiline","minRows","maxRows","onBlur","onChange","value","stateStatus","ProfileInfo","authorizedProfile","profileContent","fullName","spanDefault","aboutMe","lookingForAJob","lookingForAJobDescription","contactsWrap","setEditMode","ProfileInfoEditForm","defaultValues","input","console","log","profileEditWrap","profileEditInfo","profileEditInfoDesc","defaultChecked","profileEditContact","profileEditContactDesc","profileEditContactWrap","profileEditContactLeft","profileEditContactRight","ProfileDesc","profileWrap","profileBackground","profileDesc","flexLeft","profileAvatar","large","border","borderRadius","htmlFor","files","accept","multiple","fontSize","component","profileInfo","getProfileStatus","getAuthorizedUserId","Post","Paper","elevation","postWrap","postAvatar","likeControl","IconButton","likeCount","clearIcon","MyPosts","React","memo","postElem","main","addPost","textFieldWrap","currentTarget","btnWrap","addPostBtn","ProfileContainer","connect","authorizedUserId","fetching","useParams","isNaN","Number","NotFound","LoginSpotify","CustomTooltip","styled","classes","popper","tooltipClasses","tooltip","backgroundColor","maxWidth","logo","dev","AUTH_URL","SearchResult","searchResult","descWrap","trackTitle","trackArtist","PlayerSpotify","trackUri","play","setPlay","styles","sliderColor","showSaveIcon","isPlaying","uris","Dashboard","startSearch","setStartSearch","interval","setInterval","clearInterval","useAuth","setAccessToken","cancel","trackSearchResult","recommendedMusic","spotifyLogo","trimLeft","song","notSearch","notFound","player","none","Music","UsersContainer","lazy","GeneralChat","Routers","fallback","path","element","PROFILE_USER","spotifyWebApi","SpotifyWebApi","clientId","params","getRecommendations","min_energy","seed_genres","min_popularity","getAvailableGenreSeeds","preloader","xmlns","viewBox","preserveAspectRatio","transform","attributeName","values","keyTimes","dur","repeatCount","calcMode","keySplines","cx","cy","r","stroke","fill","d","begin","ACTION_TYPE_AUTH","SET_USER_DATA","SET_RESULT_STATUS","GET_CAPTCHA_SUCCESS","SET_PHOTO","SET_LOGOUT","setUserDataAC","setLogout","setStatusMessAC","authUserProfile","setAuthorizedUserPhoto","CAPTCHA"],"mappings":"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","file":"static/js/main.173471bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"MyPosts_main__1K2VD\",\"addPost\":\"MyPosts_addPost__3V9XG\",\"textFieldWrap\":\"MyPosts_textFieldWrap__2LQX0\",\"addPostBtn\":\"MyPosts_addPostBtn__qaThv\",\"btnWrap\":\"MyPosts_btnWrap__2cd39\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__line\":\"burger_header__line__1NrkN\",\"header__burger\":\"burger_header__burger__17a6t\",\"open\":\"burger_open__3thfe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"App_content__14CTo\",\"layoutSider\":\"App_layoutSider__af_rX\",\"siteLayout\":\"App_siteLayout__20uJF\",\"footer\":\"App_footer__15YTJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Profile_main__1zOiw\",\"fetching\":\"Profile_fetching__2PCOk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1A8HE\",\"logo\":\"Header_logo__2Awwq\",\"loginBlock\":\"Header_loginBlock__2NjNE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"notFound_wrap__377Ub\",\"title\":\"notFound_title__LzkRV\",\"flash-border\":\"notFound_flash-border__31YdZ\",\"printed-text\":\"notFound_printed-text__IDRhF\"};","import {Dispatch} from \"redux\";\r\nimport {RESULT_CODE, usersAPI} from \"../../api/api\";\r\nimport {installCaughtError} from \"./app-reducer\";\r\n\r\nexport enum ACTION_TYPE_USERS {\r\n   TOGGLE_FOLLOW = 'social_network/users/TOGGLE_FOLLOW',\r\n   SET_USERS = 'social_network/users/SET_USERS',\r\n   SET_CURRENT_PAGE = 'social_network/users/SET_CURRENT_PAGE',\r\n   SET_TOTAL_USERS_COUNT = 'social_network/users/SET_TOTAL_USERS_COUNT',\r\n   TOGGLE_IS_FETCHING = 'social_network/users/TOGGLE_IS_FETCHING',\r\n   SET_PAGE_SIZE = 'social_network/users/SET_PAGE_SIZE',\r\n   SET_IS_FOLLOWING_PROGRESS = 'social_network/users/SET_IS_FOLLOWING_PROGRESS'\r\n}\r\n\r\ntype ActionType =\r\n   ReturnType<typeof toggleFollow>\r\n   | ReturnType<typeof setUsersAC>\r\n   | ReturnType<typeof setCurrentPage>\r\n   | ReturnType<typeof setTotalUsersCountAC>\r\n   | ReturnType<typeof toggleIsFetchingAC>\r\n   | ReturnType<typeof toggleFollowingProgress>\r\n   | ReturnType<typeof setPageSize>\r\n\r\ntype LocationType = {\r\n   city: string\r\n   country: string\r\n}\r\ntype PhotoType = {\r\n   small: string | null\r\n   large: string | null\r\n}\r\n\r\nexport type UserType = {\r\n   id: number\r\n   photos: PhotoType\r\n   followed: boolean\r\n   name: string\r\n   status: string\r\n   uniqueUrlName?: string | null\r\n   location?: LocationType\r\n}\r\n\r\nexport type UsersType = {\r\n   users: UserType[]\r\n   pageSize: number\r\n   totalUserCount: number\r\n   currentPage: number\r\n   isFetching: boolean\r\n   followingInProgress: number[]\r\n}\r\n\r\nconst initialState: UsersType = {\r\n   users: [],\r\n   pageSize: 10,\r\n   totalUserCount: 0,\r\n   currentPage: 1,\r\n   isFetching: false,\r\n   followingInProgress: []\r\n}\r\n\r\nexport const usersReducer = (state = initialState, action: ActionType): UsersType => {\r\n   switch (action.type) {\r\n      case ACTION_TYPE_USERS.TOGGLE_FOLLOW:\r\n         const users = state.users.map(el => el.id === action.userId ? {...el, followed: !el.followed} : el)\r\n\r\n         return {...state, users: users}\r\n\r\n      case ACTION_TYPE_USERS.SET_USERS:\r\n         return {...state, users: [...action.users]}\r\n\r\n      case ACTION_TYPE_USERS.SET_CURRENT_PAGE:\r\n         return {...state, currentPage: action.currentPage}\r\n\r\n      case ACTION_TYPE_USERS.SET_TOTAL_USERS_COUNT:\r\n         return {...state, totalUserCount: action.totalUsersCount}\r\n\r\n      case ACTION_TYPE_USERS.TOGGLE_IS_FETCHING:\r\n         return {...state, isFetching: action.isFetching}\r\n\r\n      case ACTION_TYPE_USERS.SET_IS_FOLLOWING_PROGRESS:\r\n         return {\r\n            ...state,\r\n            followingInProgress: action.isFetching\r\n               ? [...state.followingInProgress, action.userId]\r\n               : state.followingInProgress.filter(id => id !== action.userId)\r\n         }\r\n\r\n      case ACTION_TYPE_USERS.SET_PAGE_SIZE:\r\n         return {...state, pageSize: action.pageSize}\r\n\r\n      default:\r\n         return {...state}\r\n   }\r\n}\r\n\r\nexport const toggleFollow = (userId: number) => {\r\n   return {\r\n      type: ACTION_TYPE_USERS.TOGGLE_FOLLOW,\r\n      userId\r\n   } as const\r\n}\r\n\r\nexport const setUsersAC = (users: UserType[]) => {\r\n   return {\r\n      type: ACTION_TYPE_USERS.SET_USERS,\r\n      users\r\n   } as const\r\n}\r\n\r\nexport const setCurrentPage = (currentPage: number) => {\r\n   return {\r\n      type: ACTION_TYPE_USERS.SET_CURRENT_PAGE,\r\n      currentPage\r\n   } as const\r\n}\r\n\r\nexport const setTotalUsersCountAC = (totalUsersCount: number) => {\r\n   return {\r\n      type: ACTION_TYPE_USERS.SET_TOTAL_USERS_COUNT,\r\n      totalUsersCount\r\n   } as const\r\n}\r\n\r\nexport const toggleIsFetchingAC = (isFetching: boolean) => {\r\n   return {\r\n      type: ACTION_TYPE_USERS.TOGGLE_IS_FETCHING,\r\n      isFetching\r\n   } as const\r\n}\r\n\r\nexport const setPageSize = (pageSize: number) => {\r\n   return {\r\n      type: ACTION_TYPE_USERS.SET_PAGE_SIZE,\r\n      pageSize\r\n   } as const\r\n}\r\n\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => {\r\n   return {\r\n      type: ACTION_TYPE_USERS.SET_IS_FOLLOWING_PROGRESS,\r\n      isFetching,\r\n      userId\r\n   } as const\r\n}\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number) => {\r\n   return async (dispatch: Dispatch<ActionType>) => {\r\n      dispatch(toggleIsFetchingAC(true))\r\n      dispatch(setCurrentPage(currentPage))\r\n\r\n      const response = await usersAPI.getUsers(currentPage, pageSize)\r\n\r\n      dispatch(setUsersAC(response.items))\r\n\r\n      dispatch(setTotalUsersCountAC(response.totalCount))\r\n\r\n      dispatch(toggleIsFetchingAC(false))\r\n   }\r\n}\r\n\r\nconst followUnfollow = async (dispatch: Dispatch<ActionType> | any, userID: number, apiMethod: (id: number) => Promise<any>) => {\r\n\r\n   dispatch(toggleFollowingProgress(true, userID))\r\n\r\n   const response = await apiMethod(userID)\r\n\r\n   response.resultCode === RESULT_CODE.SUCCESSFULLY && dispatch(toggleFollow(userID))\r\n   response.resultCode !== RESULT_CODE.SUCCESSFULLY && dispatch(installCaughtError(response.messages, 'warning'))\r\n\r\n   dispatch(toggleFollowingProgress(false, userID))\r\n}\r\n\r\nexport const followSuccess = (id: number) => {\r\n   return (dispatch: Dispatch<ActionType>) => {\r\n      followUnfollow(dispatch, id, usersAPI.followUser)\r\n   }\r\n}\r\n\r\nexport const unFollowSuccess = (id: number) => {\r\n   return async (dispatch: Dispatch<ActionType>) => {\r\n      followUnfollow(dispatch, id, usersAPI.unFollow)\r\n   }\r\n}\r\n\r\n","import {WS_STATUS} from \"../redux/reducer/chat-reducer\";\r\n\r\nexport enum Events {\r\n   MESSAGES_RECEIVED = 'MESSAGES_RECEIVED',\r\n   STATUS_CHANGED = 'STATUS_CHANGED',\r\n}\r\n\r\nlet ws: WebSocket | null = null\r\n\r\nconst subscribes = {\r\n   [Events.MESSAGES_RECEIVED]: [] as MessagesReceivedT[],\r\n   [Events.STATUS_CHANGED]: [] as StatusChangedT[]\r\n}\r\n\r\nconst notifyAboutStatusS = (status: WS_STATUS) => subscribes[Events.STATUS_CHANGED].forEach(s => s(status))\r\n\r\nconst openHandler = () => notifyAboutStatusS(WS_STATUS.READY)\r\n\r\nconst errorHandler = () => notifyAboutStatusS(WS_STATUS.ERROR)\r\n\r\nconst closeHandler = () => {\r\n   notifyAboutStatusS(WS_STATUS.PENDING)\r\n   setTimeout(createChannel, 3000)\r\n}\r\n\r\nconst messageHandler = (e: MessageEvent) => {\r\n   const newMessages = JSON.parse(e.data)\r\n\r\n   subscribes[Events.MESSAGES_RECEIVED].forEach(s => s(newMessages))\r\n}\r\n\r\nconst cleanUp = () => {\r\n   ws?.removeEventListener('close', closeHandler)\r\n   ws?.removeEventListener('message', messageHandler)\r\n   ws?.removeEventListener('open', openHandler)\r\n   ws?.removeEventListener('error', errorHandler)\r\n}\r\n\r\nconst createChannel = () => {\r\n   cleanUp()\r\n   ws?.close()\r\n\r\n   ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\n\r\n   notifyAboutStatusS(WS_STATUS.PENDING)\r\n\r\n   ws.addEventListener('open', openHandler)\r\n   ws.addEventListener('message', messageHandler)\r\n   ws.addEventListener('close', closeHandler)\r\n   ws.addEventListener('error', errorHandler)\r\n}\r\n\r\nexport const chatApi = {\r\n   start() {\r\n      createChannel()\r\n   },\r\n   stop() {\r\n      subscribes[Events.MESSAGES_RECEIVED] = []\r\n      subscribes[Events.STATUS_CHANGED] = []\r\n      cleanUp()\r\n      ws?.close()\r\n   },\r\n   subscribeStatus(callback: StatusChangedT) {\r\n      subscribes[Events.STATUS_CHANGED].push(callback)\r\n\r\n      return () => subscribes[Events.STATUS_CHANGED] = subscribes[Events.STATUS_CHANGED].filter(s => s !== callback)\r\n   },\r\n   subscribeMessage(callback: MessagesReceivedT) {\r\n      subscribes[Events.MESSAGES_RECEIVED].push(callback)\r\n\r\n      return () => subscribes[Events.MESSAGES_RECEIVED] = subscribes[Events.MESSAGES_RECEIVED].filter(s => s !== callback)\r\n   },\r\n   sendMessage(message: string) {\r\n      ws?.send(message)\r\n   }\r\n}\r\n\r\nexport type ChatMessageApiT = {\r\n   message: string\r\n   photo: string\r\n   userId: number\r\n   userName: string\r\n}\r\n\r\ntype MessagesReceivedT = (messages: ChatMessageApiT[]) => void\r\ntype StatusChangedT = (status: WS_STATUS) => void\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppRootStateT} from \"../redux-store\";\r\nimport {chatApi, ChatMessageApiT} from \"../../api/chat-api\";\r\nimport {v1} from \"uuid\";\r\n\r\nexport enum ACTION_TYPE_CHAT {\r\n   MESSAGES_RECEIVED = 'social_network/chat/MESSAGES_RECEIVED',\r\n   STATUS_CHANGED = 'social_network/chat/STATUS_CHANGED'\r\n}\r\n\r\nexport enum WS_STATUS {\r\n   PENDING = 'PENDING',\r\n   READY = 'READY',\r\n   ERROR = 'ERROR'\r\n}\r\n\r\nexport type ChatMessageT = ChatMessageApiT & { id: string }\r\n\r\nexport type ChatStateT = {\r\n   messages: ChatMessageT[]\r\n   status: WS_STATUS\r\n   error: boolean\r\n}\r\n\r\ntype ActionType = ReturnType<typeof messagesReceived> | ReturnType<typeof statusChanged>\r\n\r\ntype ThunkActionT = ThunkAction<void, AppRootStateT, unknown, ActionType>\r\n\r\nconst initialState: ChatStateT = {\r\n   messages: [],\r\n   status: WS_STATUS.PENDING,\r\n   error: false\r\n}\r\n\r\nexport const chatReducer = (state = initialState, action: ActionType): ChatStateT => {\r\n   switch (action.type) {\r\n      case ACTION_TYPE_CHAT.MESSAGES_RECEIVED:\r\n         return {\r\n            ...state,\r\n            messages: [\r\n               ...state.messages,\r\n               ...action.payload.map(m => ({...m, id: v1()}))]\r\n               .filter((m, index, array) => index >= array.length - 100)\r\n         }\r\n\r\n      case ACTION_TYPE_CHAT.STATUS_CHANGED:\r\n         return {...state, status: action.payload, error: action.payload === WS_STATUS.ERROR}\r\n\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\n\r\nconst messagesReceived = (mess: ChatMessageT[]) => ({type: ACTION_TYPE_CHAT.MESSAGES_RECEIVED, payload: mess} as const)\r\nconst statusChanged = (status: WS_STATUS) => ({type: ACTION_TYPE_CHAT.STATUS_CHANGED, payload: status} as const)\r\n\r\nconst newMessHandler = (messages: ChatMessageApiT[], dispatch: Dispatch<ActionType>) => dispatch(messagesReceived(messages as ChatMessageT[]))\r\nconst newStatusHandler = (status: WS_STATUS, dispatch: Dispatch<ActionType>) => dispatch(statusChanged(status))\r\n\r\nconst subscribeMessageHandler = (dispatch: Dispatch<ActionType>) =>\r\n   chatApi.subscribeMessage((messages) => newMessHandler(messages, dispatch))\r\n\r\nconst subscribeStatusHandler = (dispatch: Dispatch<ActionType>) =>\r\n   chatApi.subscribeStatus((status) => newStatusHandler(status, dispatch))\r\n\r\nexport const startMessagesListening = (): ThunkActionT => (dispatch) => {\r\n   chatApi.start()\r\n   subscribeMessageHandler(dispatch)\r\n   subscribeStatusHandler(dispatch)\r\n}\r\n\r\nexport const stopMessagesListening = (): ThunkActionT => (dispatch) => {\r\n   chatApi.stop()\r\n   subscribeMessageHandler(dispatch)()\r\n   subscribeStatusHandler(dispatch)()\r\n}\r\n\r\nexport const sendMessage = (message: string): ThunkActionT => (dispatch) => {\r\n   chatApi.sendMessage(message)\r\n}","import React, {useState} from \"react\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\n\r\ntype TooltipPropsType = {\r\n   messages: string | null\r\n   severity: \"error\" | \"warning\" | \"info\" | \"success\"\r\n   open: boolean\r\n   anchorOrigin: {\r\n      vertical: 'top' | 'bottom'\r\n      horizontal: \"right\" | 'left' | 'center'\r\n   }\r\n}\r\n\r\nexport const Tooltip: React.FC<TooltipPropsType> = (props) => {\r\n   const {messages, severity, anchorOrigin, open} = props\r\n\r\n   const [openTooltip, setOpenTooltip] = useState<boolean>(open)\r\n   const handleClose = () => setOpenTooltip(false)\r\n\r\n   return (\r\n      <Snackbar\r\n         anchorOrigin={anchorOrigin}\r\n         open={openTooltip}\r\n         autoHideDuration={1000}\r\n         onClose={handleClose}>\r\n         <MuiAlert\r\n            style={{\r\n               fontFamily: `Mochiy Pop P One, sans-serif`,\r\n               letterSpacing: '2px'\r\n            }}\r\n            variant=\"filled\"\r\n            onClose={handleClose}\r\n            severity={severity}>\r\n            {messages}\r\n         </MuiAlert>\r\n      </Snackbar>\r\n   )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__GgujW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"width\":\"form_width__wQrfa\"};","import axios from \"axios\";\r\nimport {ProfileEditFormType} from \"../redux/reducer/profile-reducer\";\r\nimport {FormDataType} from \"../redux/reducer/auth-reducer\";\r\n\r\nexport enum RESULT_CODE {\r\n   SUCCESSFULLY = 0,\r\n   ERROR = 1,\r\n   CAPTCHA = 10\r\n}\r\n\r\ntype GeneralResponseT = {\r\n   resultCode: RESULT_CODE\r\n   messages: string[]\r\n   data: any\r\n}\r\n\r\ntype MeResponseT = {\r\n   data: { id: number, email: string, login: string }\r\n   resultCode: number\r\n   messages: string[]\r\n}\r\n\r\ntype ProfileResponseT = {\r\n   aboutMe: string\r\n\r\n   contacts: {\r\n      facebook: string\r\n      website: string\r\n      vk: string\r\n      twitter: string\r\n      instagram: string\r\n      youtube: string\r\n      github: string\r\n      mainLink: string\r\n   }\r\n\r\n   lookingForAJob: boolean\r\n   lookingForAJobDescription: string\r\n   fullName: string\r\n   userId: number\r\n\r\n   photos: {\r\n      small: string\r\n      large: string\r\n   }\r\n}\r\n\r\ntype UsersResponseT = {\r\n   items: {\r\n      name: string\r\n      id: number\r\n      photos: { small: string, large: string }\r\n      status: string\r\n      followed: boolean\r\n   }[]\r\n   totalCount: number\r\n   error: string\r\n}\r\n\r\ntype PhotoResponseT = {\r\n   resultCode: RESULT_CODE\r\n   messages: string[]\r\n   data: { small: string, large: string }\r\n}\r\n\r\ntype LoginResponseT = {\r\n   resultCode: RESULT_CODE\r\n   messages: string[]\r\n   data: { userId: number }\r\n}\r\n\r\ntype CaptchaResponseT = {\r\n   url: string\r\n}\r\n\r\n\r\nconst instance = axios.create({\r\n   withCredentials: true,\r\n   baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n   headers: {\r\n      'API-KEY': 'd06a70e9-4231-4a4c-92e9-77b0013b9776'\r\n   }\r\n})\r\n\r\nexport const usersAPI = {\r\n   getUsers(currentPage: number, pageSize: number) {\r\n      return instance.get<UsersResponseT>(`users?page=${currentPage}&count=${pageSize}`)\r\n         .then(response => response.data)\r\n   },\r\n   followUser(id: number) {\r\n      return instance.post<GeneralResponseT>(`follow/${id}`)\r\n         .then(response => response.data)\r\n   },\r\n   unFollow(id: number) {\r\n      return instance.delete<GeneralResponseT>(`follow/${id}`)\r\n         .then(response => response.data)\r\n   }\r\n}\r\n\r\nexport const profileAPI = {\r\n   getProfile(userId: number) {\r\n      return instance.get<ProfileResponseT>(`profile/${userId}`)\r\n         .then(response => response.data)\r\n   },\r\n   getStatus(userID: number) {\r\n      return instance.get<string>(`profile/status/${userID}`)\r\n   },\r\n   updateStatus(status: string) {\r\n      return instance.put<GeneralResponseT>(`profile/status`, {status: status})\r\n   },\r\n   savePhoto(photoFile: File) {\r\n      const formData = new FormData()\r\n      formData.append('image', photoFile)\r\n\r\n      return instance.put<PhotoResponseT>(`profile/photo`, formData, {headers: {'Content-Type': 'multipart/form-data'}})\r\n         .then(response => response.data)\r\n   },\r\n   saveProfile(profile: ProfileEditFormType) {\r\n      return instance.put<GeneralResponseT>(`profile`, profile)\r\n   }\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n   getUserData() {\r\n      return instance.get<MeResponseT>(`auth/me`)\r\n         .then(response => response.data)\r\n   },\r\n   login(date: FormDataType) {\r\n      return instance.post<LoginResponseT>(`auth/login`, {...date})\r\n         .then(response => response.data)\r\n   },\r\n   logout() {\r\n      return instance.delete<GeneralResponseT>(`auth/login`)\r\n   }\r\n}\r\n\r\nexport const securityApi = {\r\n   getCaptchaUrl() {\r\n      return instance.get<CaptchaResponseT>(`security/get-captcha-url`)\r\n   }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"music_wrap__3GvyV\",\"song\":\"music_song__2qlFZ\",\"searchResult\":\"music_searchResult__2haKc\",\"trackTitle\":\"music_trackTitle__13dJl\",\"descWrap\":\"music_descWrap__3VjpZ\",\"trackArtist\":\"music_trackArtist__1n2Hq\",\"noTracks\":\"music_noTracks__l9t3E\",\"lyrics\":\"music_lyrics__1skV-\",\"notFound\":\"music_notFound__2dNYL\",\"player\":\"music_player__dEI9_\",\"none\":\"music_none__14DXp\",\"notSearch\":\"music_notSearch__1JPVa\",\"recommendedTracks\":\"music_recommendedTracks__2Uh0T\",\"title\":\"music_title__3-ugP\",\"container\":\"music_container__fVlP8\",\"btn\":\"music_btn__3zosP\",\"dev\":\"music_dev__2pN5A\",\"accountCredentials\":\"music_accountCredentials__25CJd\"};","import {Dispatch} from \"redux\";\r\nimport {getUserData} from \"./auth-reducer\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppRootStateT} from \"../redux-store\";\r\n\r\nexport enum ACTION_TYPE_APP {\r\n   SUCCESSFUL_INITIALIZATION = 'social_network/app/SUCCESSFUL_INITIALIZATION',\r\n   CATCH_ERROR = 'social_network/app/CATCH_ERROR',\r\n}\r\n\r\nexport type SeverityTooltipType = \"error\" | \"warning\" | \"info\" | \"success\"\r\n\r\nexport type AppStateType = {\r\n   initialized: boolean\r\n   catchError: {\r\n      error: boolean\r\n      messageError: string | null\r\n      severity: SeverityTooltipType\r\n   }\r\n}\r\n\r\ntype ActionType = ReturnType<typeof setInitialized> | ReturnType<typeof catchError>\r\n\r\ntype ThunkActionT = ThunkAction<void, AppRootStateT, unknown, ActionType>\r\n\r\nconst initialState: AppStateType = {\r\n   initialized: false,\r\n   catchError: {\r\n      error: false,\r\n      messageError: null,\r\n      severity: 'info'\r\n   }\r\n}\r\n\r\nexport const appReducer = (state = initialState, action: ActionType): AppStateType => {\r\n   switch (action.type) {\r\n      case ACTION_TYPE_APP.SUCCESSFUL_INITIALIZATION:\r\n         return {...state, initialized: true}\r\n\r\n      case ACTION_TYPE_APP.CATCH_ERROR:\r\n         return {\r\n            ...state,\r\n            catchError: {\r\n               error: action.error,\r\n               messageError: action.message,\r\n               severity: action.severity\r\n            }\r\n         }\r\n\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\nconst setInitialized = () => ({type: ACTION_TYPE_APP.SUCCESSFUL_INITIALIZATION} as const)\r\nconst catchError = (error: boolean, message: string | null, severity: SeverityTooltipType) => ({\r\n   type: ACTION_TYPE_APP.CATCH_ERROR,\r\n   message,\r\n   severity,\r\n   error\r\n} as const)\r\n\r\nexport const initializedApp = (): ThunkActionT =>\r\n   (dispatch) => {\r\n      Promise.all([\r\n         dispatch(getUserData())\r\n      ]).then(() => dispatch(setInitialized()))\r\n   }\r\n\r\nexport const installCaughtError = (message: string, severity: SeverityTooltipType) => (dispatch: Dispatch<ActionType>) => {\r\n   dispatch(catchError(true, message, severity))\r\n\r\n   setTimeout(() => dispatch(catchError(false, null, \"info\")), 2000)\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"btn_btn__14KbD\",\"line\":\"btn_line__17Zpm\",\"lineTop\":\"btn_lineTop__1njMw\",\"lineBottom\":\"btn_lineBottom__2gH1t\",\"lineLeft\":\"btn_lineLeft__2T8nO\",\"lineRight\":\"btn_lineRight__kmlVt\"};","import {v1} from \"uuid\";\r\n\r\nenum ACTION_TYPE_DIALOGS {\r\n   ADD_MESSAGE = 'ADD_MESSAGE',\r\n   UPDATE_NEW_MESSAGE = 'UPDATE_NEW_MESSAGE'\r\n}\r\n\r\ntype ActionType = ReturnType<typeof changeMessageAC> | ReturnType<typeof addMessageAC>\r\n\r\nexport type DialogsPageType = {\r\n   dialogs: Array<DialogsType>\r\n   messages: Array<MessagesType>\r\n   newMessage: string\r\n}\r\ntype DialogsType = {\r\n   id: string\r\n   name: string\r\n}\r\ntype MessagesType = {\r\n   id: string\r\n   message: string\r\n}\r\n\r\nconst initialState: DialogsPageType = {\r\n   dialogs: [\r\n      {id: v1(), name: 'Name1'},\r\n   ],\r\n   messages: [\r\n      {id: v1(), message: 'lorem Yo1'},\r\n   ],\r\n   newMessage: ''\r\n}\r\n\r\nexport const dialogReducer = (state = initialState, action: ActionType): DialogsPageType => {\r\n   switch (action.type) {\r\n      case ACTION_TYPE_DIALOGS.UPDATE_NEW_MESSAGE:\r\n\r\n         return {...state, newMessage: action.newMessage}\r\n\r\n      case ACTION_TYPE_DIALOGS.ADD_MESSAGE:\r\n         const newMess = {id: v1(), message: state.newMessage}\r\n\r\n         return {...state, messages: [...state.messages, newMess], newMessage: ''}\r\n\r\n      default:\r\n         return {...state}\r\n   }\r\n}\r\n\r\nexport const changeMessageAC = (newMessage: string) => {\r\n   return {\r\n      type: ACTION_TYPE_DIALOGS.UPDATE_NEW_MESSAGE,\r\n      newMessage: newMessage\r\n   } as const\r\n}\r\n\r\nexport const addMessageAC = () => {\r\n   return {\r\n      type: ACTION_TYPE_DIALOGS.ADD_MESSAGE,\r\n   } as const\r\n}\r\n","import React, {useState} from \"react\";\r\nimport style from './burger.module.scss'\r\n\r\ntype ButtonBurgerPropsT = {\r\n   toggleOpenMenu: () => void\r\n}\r\n\r\nexport const ButtonBurger: React.FC<ButtonBurgerPropsT> = (props) => {\r\n   const [open, setOpen] = useState(true)\r\n\r\n   const finalClassName = open ? `${style.header__burger} ${style.open}` : style.header__burger\r\n\r\n   const onClickHandler = () => {\r\n      setOpen(state => !state)\r\n      props.toggleOpenMenu()\r\n   }\r\n\r\n   return (\r\n      <button onClick={onClickHandler} className={finalClassName}>\r\n         <span className={style.header__line}> </span>\r\n         <span className={style.header__line}> </span>\r\n         <span className={style.header__line}> </span>\r\n      </button>\r\n   )\r\n}","import React, {useEffect, useState} from \"react\"\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateT} from \"../../redux/redux-store\";\r\nimport {UserDataType} from \"../../redux/reducer/auth-reducer\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Layout, Menu} from \"antd\";\r\nimport {CommentOutlined, CustomerServiceOutlined, ProfileOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport {ButtonBurger} from \"../common/ButtonBurger/ButtonBurger\";\r\nimport s from './Sidebar.module.scss'\r\nimport {PATH} from \"../../Router/Routes\";\r\n\r\nexport const Sidebar = () => {\r\n   const authorizedUser = useSelector<AppRootStateT, UserDataType | null>(state => state.auth.userData)\r\n   const [collapsed, setCollapsed] = useState<boolean>(false)\r\n   const [scrollDistance, setScrollDistance] = useState<boolean>(false)\r\n\r\n   const onClickHandler = () => setCollapsed(state => !state)\r\n\r\n   const listenerScroll = () => {\r\n      let scrollDistance = window.scrollY\r\n      scrollDistance > 80 ? setScrollDistance(true) : setScrollDistance(false)\r\n   }\r\n   const listenerResize = () => {\r\n      if (window.innerWidth < 750) setCollapsed(state => false)\r\n   }\r\n\r\n   const fixedSideBarClassName = collapsed\r\n      ? `${s.fixedSideBar} ${scrollDistance ? s.fixed : ''}`\r\n      : `${s.fixedSideBar} ${s.open} ${scrollDistance ? s.fixed : ''}`\r\n\r\n\r\n   useEffect(() => {\r\n      window.addEventListener('scroll', listenerScroll)\r\n      window.addEventListener('resize', listenerResize)\r\n\r\n      return () => {\r\n         window.removeEventListener('scroll', listenerScroll)\r\n         window.removeEventListener('resize', listenerResize)\r\n      }\r\n   }, [])\r\n\r\n   return (\r\n      <Layout.Sider\r\n         trigger={null}\r\n         collapsible\r\n         className={collapsed ? s.layoutHidden : `${s.layoutHidden} ${s.open}`}\r\n         collapsed={collapsed}\r\n         onCollapse={onClickHandler}>\r\n         <div className={fixedSideBarClassName}>\r\n            <div className={collapsed ? s.sideBarTrigger : `${s.sideBarTrigger} ${s.open}`}>\r\n               <ButtonBurger toggleOpenMenu={onClickHandler}/>\r\n            </div>\r\n            <Menu theme=\"dark\" mode=\"inline\">\r\n               <Menu.Item key=\"1\" icon={<ProfileOutlined/>}>\r\n                  <Link to={authorizedUser ? `/Social_Network/profile/${authorizedUser.id}` : PATH.HOME}>Profile</Link>\r\n               </Menu.Item>\r\n\r\n               <Menu.Item key=\"2\" icon={<UserOutlined/>}>\r\n                  <Link to={PATH.USERS}>Users</Link>\r\n               </Menu.Item>\r\n\r\n               <Menu.Item key=\"3\" icon={<CommentOutlined/>}>\r\n                  <Link to={PATH.CHAT}>General Chat</Link>\r\n               </Menu.Item>\r\n\r\n               <Menu.Item key=\"4\" icon={<CustomerServiceOutlined/>}>\r\n                  <Link to={PATH.SPOTIFY_MUSIC}>Spotify Music</Link>\r\n               </Menu.Item>\r\n            </Menu>\r\n         </div>\r\n      </Layout.Sider>\r\n   )\r\n}","import {Button, makeStyles} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport s from './Header.module.scss'\r\nimport {Avatar, Layout} from \"antd\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AuthStateType, logout} from \"../../redux/reducer/auth-reducer\";\r\nimport {AppRootStateT} from \"../../redux/redux-store\";\r\nimport {PhotoType} from \"../../redux/reducer/profile-reducer\";\r\nimport {PATH} from \"../../Router/Routes\";\r\n\r\n\r\nexport const Header: React.FC = () => {\r\n   const navigate = useNavigate()\r\n\r\n   const dispatch = useDispatch()\r\n\r\n   const authDate = useSelector<AppRootStateT, AuthStateType>(state => state.auth)\r\n\r\n   const avatar = useSelector<AppRootStateT, PhotoType | null>(state => state.auth.photo)\r\n\r\n   const onClickHandlerLogout = () => {\r\n\r\n      dispatch(logout())\r\n\r\n      setTimeout(() => navigate(PATH.HOME), 100)\r\n   }\r\n\r\n   const onClickHandlerLogin = () => navigate(PATH.LOGIN)\r\n\r\n   const style = makeStyles(() => ({\r\n      default: {\r\n         marginLeft: '20px',\r\n         fontFamily: `Mochiy Pop P One, sans-serif`\r\n      }\r\n   }))\r\n\r\n   return (\r\n      <Layout.Header className={s.header}>\r\n         <Avatar src={avatar?.small} size={'large'}/>\r\n\r\n         {authDate.userData?.login\r\n            ? <div className={s.loginBlock}>\r\n               Welcome {authDate.userData?.login}\r\n               <Button\r\n                  className={style().default}\r\n                  onClick={onClickHandlerLogout}\r\n                  variant={\"contained\"}\r\n                  color=\"primary\">Logout</Button>\r\n            </div>\r\n            : <div className={s.loginBlock}>\r\n               <Button\r\n                  className={style().default}\r\n                  onClick={onClickHandlerLogin}\r\n                  variant={\"contained\"}\r\n                  color=\"primary\">Login</Button>\r\n            </div>}\r\n      </Layout.Header>\r\n   )\r\n}\r\n\r\n","import React, {useEffect, useCallback, FC} from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateT} from \"./redux/redux-store\";\nimport {Preloader} from \"./components/common/Preloader/Preloader\";\nimport {AppStateType, initializedApp, installCaughtError} from \"./redux/reducer/app-reducer\";\nimport {Tooltip} from \"./components/common/Tooltip/Tooltip\";\nimport 'antd/dist/antd.css';\nimport {Layout} from 'antd';\nimport {Routers} from \"./Router/Routes\";\nimport {Sidebar} from \"./components/Sidebar/Sidebar\";\nimport s from './App.module.scss'\nimport {Header} from \"./components/Header/Header\";\n\nconst App: FC = () => {\n   const {initialized, catchError} = useSelector<AppRootStateT, AppStateType>(state => state.app)\n\n   const dispatch = useDispatch()\n\n   const {Content, Footer,} = Layout;\n\n   const catchUnhandledRejection = useCallback((e: PromiseRejectionEvent) => {\n      dispatch(installCaughtError(e.reason.message, 'error'))\n   }, [dispatch])\n\n   useEffect(() => {\n      dispatch(initializedApp())\n   }, [dispatch])\n\n   useEffect(() => {\n      window.addEventListener('unhandledrejection', catchUnhandledRejection)\n\n      return () => {\n         window.removeEventListener('unhandledrejection', catchUnhandledRejection)\n      }\n   }, [catchUnhandledRejection])\n\n   if (!initialized) {\n      return <Preloader/>\n   }\n\n   return (\n      <BrowserRouter>\n         <Layout>\n            <Header/>\n            <Layout className={s.layoutSider} style={{minHeight: '100vh', margin: '15px 0 0 0'}}>\n               <Sidebar/>\n               <Layout className={s.siteLayout}>\n                  <Content className={s.content}>\n                     <Routers/>\n                  </Content>\n                  <Footer className={s.footer}>Small Developer ©2021 Created by Mr. Nobody</Footer>\n               </Layout>\n            </Layout>\n         </Layout>\n\n         {catchError.error &&\n         <Tooltip\n            messages={catchError.messageError}\n            severity={catchError.severity} open={catchError.error}\n            anchorOrigin={{vertical: 'top', horizontal: 'center'}}/>}\n      </BrowserRouter>\n   )\n}\n\nexport default App","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport {profileReducer} from \"./reducer/profile-reducer\";\r\nimport {dialogReducer} from \"./reducer/dialog-reducer\";\r\nimport {usersReducer} from \"./reducer/users-reducer\";\r\nimport {authReducer} from \"./reducer/auth-reducer\";\r\nimport thunk from 'redux-thunk'\r\nimport {appReducer} from \"./reducer/app-reducer\";\r\nimport {chatReducer} from \"./reducer/chat-reducer\";\r\nimport {spotifyReducer} from \"./reducer/spotify-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n   profilePage: profileReducer,\r\n   dialogsPage: dialogReducer,\r\n   usersPage: usersReducer,\r\n   auth: authReducer,\r\n   app: appReducer,\r\n   chat: chatReducer,\r\n   spotify: spotifyReducer\r\n})\r\n\r\nexport type AppRootStateT = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from './redux/redux-store';\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n   <Provider store={store}>\n      <App/>\n   </Provider>,\n   document.getElementById('root')\n)\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import {Dispatch} from \"redux\";\r\nimport {v1} from \"uuid\";\r\nimport {profileAPI, RESULT_CODE} from \"../../api/api\";\r\nimport {AppRootStateT} from \"../redux-store\";\r\nimport {installCaughtError} from \"./app-reducer\";\r\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\n\r\nexport enum ACTION_TYPE_PROFILE {\r\n   ADD_POST = 'social_network/profile/ADD_POST',\r\n   UPDATE_NEW_POST = 'social_network/profile/UPDATE_NEW_POST',\r\n   SET_USER_PROFILE = 'social_network/profile/SET_USER_PROFILE',\r\n   SET_STATUS = 'social_network/profile/SET_STATUS',\r\n   SAVE_PHOTO = 'social_network/profile/SAVE_PHOTO',\r\n   SET_LIKE = 'social_network/profile/SET_LIKE',\r\n   DELETE_POST = 'social_network/profile/DELETE_POST',\r\n   GET_USER_POST = 'social_network/profile/GET_USER_POST',\r\n}\r\n\r\ntype ActionType = ReturnType<typeof addPostAC>\r\n   | ReturnType<typeof changeTextAC>\r\n   | ReturnType<typeof setUserProfileAC>\r\n   | ReturnType<typeof setStatusAC>\r\n   | ReturnType<typeof savePhotoSuccess>\r\n   | ReturnType<typeof setLike>\r\n   | ReturnType<typeof deletePost>\r\n   | ReturnType<typeof getUserPost>\r\n\r\ntype ThunkActionT = ThunkAction<void, AppRootStateT, unknown, ActionType>\r\n\r\nexport type ProfileEditFormType = {\r\n   aboutMe: string\r\n   fullName: string\r\n   lookingForAJob: boolean\r\n   lookingForAJobDescription: string\r\n   contacts: {\r\n      github: string\r\n      vk: string\r\n      facebook: string\r\n      instagram: string\r\n      twitter: string\r\n      website: string\r\n      youtube: string\r\n      mainLink: string\r\n   }\r\n}\r\n\r\nexport type ProfilePageType = {\r\n   posts: PostsType[] | []\r\n   newPostText: string\r\n   profile: null | ProfileType\r\n   status: string\r\n}\r\ntype PostsType = {\r\n   id: string\r\n   message: string\r\n   likesCount: number\r\n}\r\n\r\nexport type ContactsType = {\r\n   facebook: string\r\n   github: string\r\n   instagram: string\r\n   mainLink: string\r\n   twitter: string\r\n   vk: string\r\n   website: string\r\n   youtube: string\r\n}\r\n\r\nexport type PhotoType = {\r\n   small: string | null\r\n   large: string | null\r\n}\r\n\r\nexport type ProfileType = {\r\n   aboutMe: string\r\n   contacts: ContactsType\r\n   fullName: string\r\n   lookingForAJob: boolean\r\n   lookingForAJobDescription: string\r\n   photos: PhotoType\r\n   userId: number\r\n}\r\n\r\n\r\nconst initialState: ProfilePageType = {\r\n   profile: null,\r\n   posts: [],\r\n   newPostText: '',\r\n   status: ''\r\n}\r\n\r\nexport const profileReducer = (state = initialState, action: ActionType): ProfilePageType => {\r\n   switch (action.type) {\r\n      case ACTION_TYPE_PROFILE.ADD_POST: {\r\n         const stateCopy = {\r\n            ...state,\r\n            newPostText: '',\r\n            posts: [{\r\n               id: v1(),\r\n               message: state.newPostText,\r\n               likesCount: 0,\r\n            }, ...state.posts]\r\n         }\r\n\r\n         saveState<PostsType[]>(`userPosts:${stateCopy.profile?.userId}`, [...stateCopy.posts])\r\n\r\n         return stateCopy\r\n      }\r\n\r\n      case ACTION_TYPE_PROFILE.UPDATE_NEW_POST:\r\n         return {...state, newPostText: action.newText}\r\n\r\n      case ACTION_TYPE_PROFILE.SET_USER_PROFILE:\r\n         return {...state, profile: action.profile}\r\n\r\n      case ACTION_TYPE_PROFILE.SET_STATUS:\r\n         return {...state, status: action.status}\r\n\r\n      case ACTION_TYPE_PROFILE.SAVE_PHOTO:\r\n         return {...state, profile: state.profile && {...state.profile, ...action.photos}}\r\n\r\n      case ACTION_TYPE_PROFILE.SET_LIKE: {\r\n         const stateCopy = {\r\n            ...state,\r\n            posts: state.posts.map(p => p.id === action.id ? {...p, likesCount: action.like} : p)\r\n         }\r\n\r\n         saveState<PostsType[]>(`userPosts:${stateCopy.profile?.userId}`, [...stateCopy.posts])\r\n\r\n         return stateCopy\r\n      }\r\n\r\n      case ACTION_TYPE_PROFILE.GET_USER_POST:\r\n         return {...state, posts: action.post}\r\n\r\n      case ACTION_TYPE_PROFILE.DELETE_POST: {\r\n         const stateCopy = {...state, posts: state.posts.filter(p => p.id !== action.id)}\r\n\r\n         saveState<PostsType[]>(`userPosts:${stateCopy.profile?.userId}`, [...stateCopy.posts])\r\n\r\n         return stateCopy\r\n      }\r\n\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\nexport const addPostAC = () => {\r\n   return {\r\n      type: ACTION_TYPE_PROFILE.ADD_POST\r\n   } as const\r\n}\r\n\r\nexport const getUserPost = (post: PostsType[]) => {\r\n   return {\r\n      type: ACTION_TYPE_PROFILE.GET_USER_POST,\r\n      post\r\n   } as const\r\n}\r\n\r\nexport const changeTextAC = (newText: string) => {\r\n   return {\r\n      type: ACTION_TYPE_PROFILE.UPDATE_NEW_POST,\r\n      newText: newText\r\n   } as const\r\n}\r\n\r\nexport const setUserProfileAC = (profile: ProfileType) => {\r\n   return {\r\n      type: ACTION_TYPE_PROFILE.SET_USER_PROFILE,\r\n      profile\r\n   } as const\r\n}\r\n\r\nexport const setStatusAC = (status: string) => {\r\n   return {\r\n      type: ACTION_TYPE_PROFILE.SET_STATUS,\r\n      status\r\n   } as const\r\n}\r\n\r\nexport const savePhotoSuccess = (photos: PhotoType) => {\r\n   return {\r\n      type: ACTION_TYPE_PROFILE.SAVE_PHOTO,\r\n      photos\r\n   } as const\r\n}\r\nexport const setLike = (like: number, id: string) => {\r\n   return {\r\n      type: ACTION_TYPE_PROFILE.SET_LIKE,\r\n      like,\r\n      id\r\n   } as const\r\n}\r\n\r\nexport const deletePost = (id: string) => {\r\n   return {\r\n      type: ACTION_TYPE_PROFILE.DELETE_POST,\r\n      id\r\n   } as const\r\n}\r\n\r\nexport const setLikeSuccess = (like: number, id: string) => (dispatch: Dispatch<ActionType>) => {\r\n   dispatch(setLike(like, id))\r\n}\r\n\r\nexport const deletePostSuccess = (id: string) => (dispatch: Dispatch<ActionType>) => {\r\n   dispatch(deletePost(id))\r\n}\r\n\r\nexport const setUserProfile = (id: number) => {\r\n   return async (dispatch: Dispatch<ActionType>) => {\r\n      const data = await profileAPI.getProfile(id)\r\n\r\n      dispatch(setUserProfileAC(data))\r\n      dispatch(getUserPost(restoreState<PostsType[]>(`userPosts:${id}`, [])))\r\n   }\r\n}\r\n\r\nexport const getStatus = (id: number) => (dispatch: Dispatch<ActionType>) => {\r\n   profileAPI.getStatus(id)\r\n      .then(response => {\r\n         dispatch(setStatusAC(response.data))\r\n      })\r\n}\r\n\r\nexport const updateStatus = (status: string): ThunkActionT => (dispatch) => {\r\n   profileAPI.updateStatus(status)\r\n      .then(response => {\r\n         response.data.resultCode === RESULT_CODE.SUCCESSFULLY && dispatch(setStatusAC(status))\r\n         response.data.resultCode !== RESULT_CODE.SUCCESSFULLY && dispatch(installCaughtError(response.data.messages[0], 'warning'))\r\n      })\r\n}\r\n\r\nexport const savePhoto = (file: File): ThunkActionT => async (dispatch) => {\r\n   const response = await profileAPI.savePhoto(file)\r\n\r\n   response.resultCode === RESULT_CODE.SUCCESSFULLY && dispatch(savePhotoSuccess(response.data))\r\n   response.resultCode !== RESULT_CODE.SUCCESSFULLY && dispatch(installCaughtError(response.messages[0], 'warning'))\r\n}\r\n\r\nexport const saveProfile = (profile: ProfileEditFormType): ThunkActionT => async (dispatch, getState) => {\r\n   const userId = getState().auth.userData?.id\r\n   const response = await profileAPI.saveProfile(profile)\r\n\r\n   response.data.resultCode === RESULT_CODE.SUCCESSFULLY && userId && await dispatch(setUserProfile(userId))\r\n   response.data.resultCode !== RESULT_CODE.SUCCESSFULLY && dispatch(installCaughtError(response.data.messages[0], 'warning'))\r\n}\r\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n   const stateAsString = JSON.stringify(state)\n   localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n   let state = defaultState\n   const stateAsString = localStorage.getItem(key)\n   if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n   return state\n}\n\n","import {ThunkAction} from \"redux-thunk\";\r\nimport {spotifyAPI} from \"../../api/spotify-api\";\r\nimport {AppRootStateT} from \"../redux-store\";\r\nimport {installCaughtError} from \"./app-reducer\";\r\n\r\nexport enum ACTION_TYPE_SPOTIFY {\r\n   SET_TOKEN_INFO = 'social_network/spotify/SET_ACCESS_TOKEN',\r\n   REFRESH_TOKEN_INFO = 'social_network/spotify/REFRESH_TOKEN_INFO',\r\n   SET_CHOOSE_TRACK = 'social_network/spotify/SET_CHOOSE_TRACK',\r\n   SET_LYRICS = 'social_network/spotify/SET_LYRICS',\r\n   SET_IS_FETCHING = 'social_network/spotify/SET_IS_FETCHING',\r\n   SET_SEARCH_RESULTS = 'social_network/spotify/SET_SEARCH_RESULTS',\r\n   SET_SEARCH = 'social_network/spotify/SET_SEARCH',\r\n   SET_RECOMMENDED_TRACKS = 'social_network/spotify/SET_RANDOM_PLAYLIST',\r\n}\r\n\r\nexport type SearchResultsT = {\r\n   artist: string\r\n   title: string\r\n   uri: string\r\n   albumUrl: string\r\n}\r\n\r\nexport type TokenT = {\r\n   accessToken: string\r\n   refreshToken: string\r\n   expiresIn: number\r\n}\r\n\r\ntype DashboardT = {\r\n   search: string\r\n   lyrics: string\r\n   searchResults: SearchResultsT[]\r\n   playingTrack: SearchResultsT | null\r\n}\r\n\r\nexport type spotifyStateT = {\r\n   token: TokenT\r\n   dashboard: DashboardT\r\n   recommendedTracks: SearchResultsT[]\r\n   isFetching: boolean\r\n}\r\n\r\ntype ActionT = ReturnType<typeof setTokenInfo>\r\n   | ReturnType<typeof refreshTokenInfo>\r\n   | ReturnType<typeof chooseTrack>\r\n   | ReturnType<typeof setLyrics>\r\n   | ReturnType<typeof setLoadingData>\r\n   | ReturnType<typeof setSearchResults>\r\n   | ReturnType<typeof setSearch>\r\n   | ReturnType<typeof setRecommendedTracks>\r\n\r\ntype ThunkActionT = ThunkAction<void, AppRootStateT, unknown, ActionT>\r\n\r\nconst initialState: spotifyStateT = {\r\n   token: {\r\n      accessToken: '',\r\n      refreshToken: '',\r\n      expiresIn: 0,\r\n   },\r\n   dashboard: {\r\n      search: '',\r\n      lyrics: '',\r\n      searchResults: [],\r\n      playingTrack: null\r\n   },\r\n   recommendedTracks: [],\r\n   isFetching: false,\r\n}\r\n\r\n\r\nexport const spotifyReducer = (state = initialState, action: ActionT): spotifyStateT => {\r\n   switch (action.type) {\r\n      case ACTION_TYPE_SPOTIFY.SET_IS_FETCHING:\r\n         return {...state, isFetching: action.isFetching}\r\n\r\n      case ACTION_TYPE_SPOTIFY.SET_TOKEN_INFO:\r\n         return {...state, token: action.token}\r\n\r\n      case ACTION_TYPE_SPOTIFY.REFRESH_TOKEN_INFO:\r\n         return {...state, token: {...state.token, ...action.token}}\r\n\r\n      case ACTION_TYPE_SPOTIFY.SET_LYRICS:\r\n         return {...state, dashboard: {...state.dashboard, lyrics: action.lyrics}}\r\n\r\n      case ACTION_TYPE_SPOTIFY.SET_SEARCH:\r\n         return {...state, dashboard: {...state.dashboard, search: action.search}}\r\n\r\n      case ACTION_TYPE_SPOTIFY.SET_CHOOSE_TRACK:\r\n         return {\r\n            ...state,\r\n            dashboard: {\r\n               ...state.dashboard,\r\n               playingTrack: action.track,\r\n               search: '',\r\n               lyrics: ''\r\n            }\r\n         }\r\n\r\n      case ACTION_TYPE_SPOTIFY.SET_SEARCH_RESULTS:\r\n         return {\r\n            ...state,\r\n            dashboard: {\r\n               ...state.dashboard,\r\n               searchResults: action.searchResults\r\n            }\r\n         }\r\n\r\n      case ACTION_TYPE_SPOTIFY.SET_RECOMMENDED_TRACKS:\r\n         return {...state, recommendedTracks: action.playlist}\r\n\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\nconst setTokenInfo = (token: TokenT) => ({\r\n   type: ACTION_TYPE_SPOTIFY.SET_TOKEN_INFO, token\r\n} as const)\r\n\r\nconst refreshTokenInfo = (token: { refreshToken: string, expiresIn: number }) => ({\r\n   type: ACTION_TYPE_SPOTIFY.REFRESH_TOKEN_INFO,\r\n   token\r\n} as const)\r\n\r\nconst chooseTrack = (track: SearchResultsT) => ({\r\n   type: ACTION_TYPE_SPOTIFY.SET_CHOOSE_TRACK,\r\n   track\r\n} as const)\r\n\r\nconst setLyrics = (lyrics: string) => ({\r\n   type: ACTION_TYPE_SPOTIFY.SET_LYRICS,\r\n   lyrics\r\n} as const)\r\n\r\nexport const setSearchResults = (searchResults: SearchResultsT[]) => ({\r\n   type: ACTION_TYPE_SPOTIFY.SET_SEARCH_RESULTS,\r\n   searchResults\r\n} as const)\r\n\r\nconst setRecommendedTracks = (playlist: SearchResultsT[]) => ({\r\n   type: ACTION_TYPE_SPOTIFY.SET_RECOMMENDED_TRACKS,\r\n   playlist\r\n} as const)\r\n\r\n\r\nconst setLoadingData = (isFetching: boolean) => ({type: ACTION_TYPE_SPOTIFY.SET_IS_FETCHING, isFetching} as const)\r\nexport const setSearch = (search: string) => ({type: ACTION_TYPE_SPOTIFY.SET_SEARCH, search} as const)\r\n\r\nexport const loginTokenSpotify = (code: string): ThunkActionT =>\r\n   async (dispatch) => {\r\n      try {\r\n         dispatch(setLoadingData(true))\r\n\r\n         const response = await spotifyAPI.loginToken(code)\r\n\r\n         dispatch(setTokenInfo(response))\r\n\r\n         dispatch(setLoadingData(false))\r\n      } catch (error) {\r\n         error instanceof Error && dispatch(installCaughtError(error.message, 'error'))\r\n         dispatch(setLoadingData(false))\r\n      }\r\n   }\r\n\r\nexport const refreshTokenSpotify = (token: string): ThunkActionT =>\r\n   async (dispatch) => {\r\n      try {\r\n         dispatch(setLoadingData(true))\r\n\r\n         const response = await spotifyAPI.refreshToken(token)\r\n\r\n         dispatch(refreshTokenInfo(response))\r\n\r\n         dispatch(setLoadingData(false))\r\n      } catch (error) {\r\n         error instanceof Error && dispatch(installCaughtError(error.message, 'error'))\r\n         dispatch(setLoadingData(false))\r\n      }\r\n   }\r\n\r\nexport const setChooseTrack = (track: SearchResultsT): ThunkActionT =>\r\n   (dispatch) => {\r\n      dispatch(chooseTrack(track))\r\n   }\r\n\r\nexport const setLyricsOfPlayingSong = (title: string, artist: string): ThunkActionT =>\r\n   async (dispatch) => {\r\n      try {\r\n         dispatch(setLoadingData(true))\r\n\r\n         const response = await spotifyAPI.getLyrics(title, artist)\r\n\r\n         dispatch(setLyrics(response.lyrics))\r\n\r\n         dispatch(setLoadingData(false))\r\n      } catch (error) {\r\n         error instanceof Error && dispatch(installCaughtError(error.message, 'error'))\r\n         dispatch(setLoadingData(false))\r\n      }\r\n   }\r\n\r\nconst setTracks = (track: SpotifyApi.TrackObjectFull | SpotifyApi.TrackObjectSimplified) => {\r\n   //@ts-ignore\r\n   const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\r\n         if ((image.height || 0) < (smallest.height || 0)) return image\r\n\r\n         return smallest\r\n      },\r\n      //@ts-ignore\r\n      track.album.images[0]\r\n   )\r\n\r\n   return {\r\n      artist: track.artists[0].name,\r\n      title: track.name,\r\n      uri: track.uri,\r\n      albumUrl: smallestAlbumImage.url,\r\n   }\r\n}\r\n\r\nexport const getSearchResults = (search: string, cancelSearch: boolean): ThunkActionT =>\r\n   async (dispatch) => {\r\n      try {\r\n         dispatch(setLoadingData(true))\r\n\r\n         const res = await spotifyAPI.searchTracks(search)\r\n\r\n         if (cancelSearch) return\r\n\r\n         dispatch(setSearchResults(res.body.tracks ? res.body.tracks.items.map(setTracks) : []))\r\n\r\n         dispatch(setLoadingData(false))\r\n      } catch (error) {\r\n         error instanceof Error && dispatch(installCaughtError(error.message, 'error'))\r\n         dispatch(setLoadingData(false))\r\n      }\r\n   }\r\n\r\n\r\nexport const getRecommendedTracks = (): ThunkActionT =>\r\n   async (dispatch) => {\r\n      try {\r\n         dispatch(setLoadingData(true))\r\n\r\n         const res = await spotifyAPI.getRecommended()\r\n\r\n         dispatch(setRecommendedTracks(res.body.tracks ? res.body.tracks.map(setTracks) : []))\r\n\r\n         dispatch(setLoadingData(false))\r\n      } catch (error) {\r\n         error instanceof Error && dispatch(installCaughtError(error.message, 'error'))\r\n         dispatch(setLoadingData(false))\r\n      }\r\n   }","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideBarTrigger\":\"Sidebar_sideBarTrigger__2ed9p\",\"open\":\"Sidebar_open__3wGtN\",\"fixedSideBar\":\"Sidebar_fixedSideBar__1sWle\",\"fixed\":\"Sidebar_fixed__1W3y5\",\"layoutHidden\":\"Sidebar_layoutHidden__9ERTb\"};","import React, {Suspense} from \"react\";\r\nimport {Route, Routes} from \"react-router-dom\";\r\nimport {StartPage} from \"../components/StartPage/StartPage\";\r\nimport LoginFormContainer from \"../components/Login/LoginForm\";\r\nimport {ProfileContainer} from \"../components/Profile/Profile\";\r\nimport {NotFound} from \"../components/common/NotFound/NotFound\";\r\nimport {Preloader} from \"../components/common/Preloader/Preloader\";\r\nimport {Music} from \"../components/SpotifyMusic/Music\";\r\n\r\nconst UsersContainer = React.lazy(() => import('../components/Users/UsersContainer'));\r\nconst GeneralChat = React.lazy(() => import('../components/GeneralChat/Chat'));\r\n\r\nexport enum PATH {\r\n   HOME = \"/Social_Network\",\r\n   LOGIN = '/Social_Network/login',\r\n   PROFILE_USER = '/Social_Network/profile/:userId',\r\n   CHAT = '/Social_Network/chat',\r\n   USERS = '/Social_Network/users',\r\n   SPOTIFY_MUSIC = '/Social_Network/spotifyMusic',\r\n}\r\n\r\nexport const Routers = () => {\r\n   return (\r\n      <Suspense fallback={<Preloader/>}>\r\n         <Routes>\r\n            <Route path={PATH.HOME} element={<StartPage/>}/>\r\n            <Route path={PATH.LOGIN} element={<LoginFormContainer/>}/>\r\n            <Route path={PATH.PROFILE_USER} element={<ProfileContainer/>}/>\r\n            <Route path={PATH.CHAT} element={<GeneralChat/>}/>\r\n            <Route path={PATH.USERS} element={<UsersContainer/>}/>\r\n            <Route path={PATH.SPOTIFY_MUSIC} element={<Music/>}/>\r\n            <Route path={'*'} element={<NotFound/>}/>\r\n         </Routes>\r\n      </Suspense>\r\n   )\r\n}","import React from \"react\";\r\nimport s from './btn.module.scss'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\ntype PropsType = {\r\n   goAnotherSite: boolean\r\n   link: string\r\n   name: string\r\n   callBack?: () => void\r\n   className?: string\r\n   style?: React.CSSProperties\r\n}\r\n\r\nexport const NeonBtn: React.FC<PropsType> = (props) => {\r\n   const {callBack, name, className, link, goAnotherSite, style} = props\r\n\r\n   const onClickHandler = () => {\r\n      callBack && callBack()\r\n   }\r\n\r\n\r\n   return (\r\n      <>{goAnotherSite\r\n         ? <a href={link}>\r\n            <button\r\n               style={style}\r\n               onClick={onClickHandler}\r\n               className={`${s.btn} ${className}`}>\r\n               <span className={`${s.line} ${s.lineTop}`}> </span>\r\n               <span className={`${s.line} ${s.lineLeft}`}> </span>\r\n               <span className={`${s.line} ${s.lineRight}`}> </span>\r\n               <span className={`${s.line} ${s.lineBottom}`}> </span>\r\n               {name}\r\n            </button>\r\n         </a>\r\n         : <Link to={link}>\r\n            <button\r\n               style={style}\r\n               onClick={onClickHandler}\r\n               className={`${s.btn} ${className}`}>\r\n               <span className={`${s.line} ${s.lineTop}`}> </span>\r\n               <span className={`${s.line} ${s.lineLeft}`}> </span>\r\n               <span className={`${s.line} ${s.lineRight}`}> </span>\r\n               <span className={`${s.line} ${s.lineBottom}`}> </span>\r\n               {name}\r\n            </button>\r\n         </Link>\r\n      }\r\n      </>\r\n   )\r\n}","export default __webpack_public_path__ + \"static/media/rocket.58833b69.png\";","import React from \"react\";\r\nimport s from './homePage.module.scss'\r\nimport {NeonBtn} from \"../common/NeonBtn/NeonBtn\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateT} from \"../../redux/redux-store\";\r\nimport {UserDataType} from \"../../redux/reducer/auth-reducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport rocket from '../../image/rocket.png'\r\nimport {PATH} from \"../../Router/Routes\";\r\n\r\nconst code = new URLSearchParams(window.location.search).get(\"code\")\r\n\r\nexport const StartPage: React.FC = () => {\r\n   const isAuth = useSelector<AppRootStateT, boolean>(state => state.auth.isAuth)\r\n   const authorizedUser = useSelector<AppRootStateT, UserDataType | null>(state => state.auth.userData)\r\n\r\n   if (code) return <Navigate replace to={PATH.SPOTIFY_MUSIC}/>\r\n\r\n   if (isAuth) return <Navigate replace to={`/Social_Network/profile/${authorizedUser?.id}`}/>\r\n\r\n   return (\r\n      <div className={s.wrap}>\r\n\r\n         <h1 className={s.mainTitle}>Social Network <span><img src={rocket} alt=\"rocket\"/></span></h1>\r\n\r\n         <p className={s.desc}>\r\n            Yo stranger, this is SPA a small social network, a pet project on which a juniors developer trains.\r\n         </p>\r\n         <div className={s.descTeh}>\r\n            <span>To test the application, register or use common test account for testing!</span>\r\n            <div className={s.accountCredentials}>\r\n               <span className={s.testInfo}> <span>Email:</span> pecab31632@ritumusic.com</span>\r\n               <span className={s.testInfo}> <span>Password:</span>  Account_For_Test</span>\r\n            </div>\r\n            <div className={s.btnGroup}>\r\n               <NeonBtn goAnotherSite={true} link={'https://social-network.samuraijs.com/signUp'} name={'Register'}/>\r\n               <NeonBtn goAnotherSite={false} link={PATH.LOGIN} name={'Login'}/>\r\n            </div>\r\n         </div>\r\n         <p className={s.desc}>\r\n            To see the entire stack that I have used go to my\r\n            <a target='blank' href=\"https://github.com/MrGentelman/Social_network_React_Redux\">GitHub</a>\r\n         </p>\r\n      </div>\r\n   )\r\n}","import React, {useState} from \"react\";\r\nimport {SubmitHandler, useForm} from \"react-hook-form\";\r\nimport {\r\n   Button,\r\n   Checkbox,\r\n   Container,\r\n   FormControlLabel,\r\n   makeStyles,\r\n   TextField\r\n} from \"@material-ui/core\";\r\nimport * as yup from 'yup';\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {FormDataType, login, UserDataType} from \"../../redux/reducer/auth-reducer\";\r\nimport {AppRootStateT} from \"../../redux/redux-store\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport s from './form.module.scss'\r\n\r\nexport const LoginPage: React.FC = () => {\r\n   const isAuth = useSelector<AppRootStateT, boolean>(state => state.auth.isAuth)\r\n   const authorizedUser = useSelector<AppRootStateT, UserDataType | null>(state => state.auth.userData)\r\n\r\n   if (isAuth) {\r\n      return <Navigate to={authorizedUser ? `/Social_Network/profile/${authorizedUser.id}` : '/login'}/>\r\n   }\r\n\r\n   return <LoginForm/>\r\n}\r\n\r\nconst LoginForm: React.FC = () => {\r\n   const statusMessages = useSelector<AppRootStateT, string>(state => state.auth.statusMessages)\r\n   const resultStatusMessage = useSelector<AppRootStateT, boolean>(state => state.auth.resultStatusMessage)\r\n   const captchaUrl = useSelector<AppRootStateT, string | null>(state => state.auth.captchaUrl)\r\n\r\n   const dispatch = useDispatch()\r\n\r\n   const [openTooltip, setOpenTooltip] = useState<boolean>(false)\r\n   const handleClick = () => setOpenTooltip(true)\r\n   const handleClose = () => setOpenTooltip(false)\r\n\r\n   const schema = yup.object().shape({\r\n      email: yup\r\n         .string()\r\n         .email('Email should have correct format')\r\n         .required('Email is a required field'),\r\n      password: yup\r\n         .string()\r\n         .required('Password is a required field')\r\n   })\r\n\r\n   const {register, handleSubmit, formState: {errors}} = useForm<FormDataType>({\r\n      mode: \"onBlur\",\r\n      resolver: yupResolver(schema)\r\n   });\r\n\r\n   const onSubmit: SubmitHandler<FormDataType> = (data) => dispatch(login(data))\r\n\r\n   const useStyles = makeStyles(() => ({\r\n      position: {\r\n         display: 'flex',\r\n         justifyContent: 'center',\r\n         flexDirection: 'column',\r\n         alignItems: 'center'\r\n      },\r\n      container: {\r\n         padding: '100px 0'\r\n      }\r\n   }))\r\n\r\n   return (\r\n      <Container className={`${useStyles().position} ${useStyles().container}`}>\r\n         <Snackbar\r\n            anchorOrigin={{vertical: 'top', horizontal: \"right\"}}\r\n            open={openTooltip}\r\n            autoHideDuration={2000}\r\n            onClose={handleClose}>\r\n            <MuiAlert\r\n               style={{\r\n                  fontFamily: `Mochiy Pop P One, sans-serif`,\r\n                  letterSpacing: '2px'\r\n               }}\r\n               variant=\"filled\"\r\n               onClose={handleClose}\r\n               severity={resultStatusMessage ? 'success' : 'error'}>\r\n               {statusMessages}\r\n            </MuiAlert>\r\n         </Snackbar>\r\n\r\n         <form\r\n            className={`${useStyles().position} ${s.width}`}\r\n            noValidate\r\n            onSubmit={handleSubmit(onSubmit)}>\r\n\r\n            <TextField\r\n               fullWidth\r\n               helperText={errors.email?.message}\r\n               error={!!errors.email}\r\n               id={'email'}\r\n               required\r\n               label={'Email'}\r\n               type={\"text\"}\r\n               autoComplete={\"username\"}\r\n               margin={\"normal\"}\r\n               variant={'outlined'}\r\n               {...register(\"email\", {required: true})} />\r\n\r\n            <TextField\r\n               required\r\n               fullWidth\r\n               helperText={errors.password?.message}\r\n               error={!!errors.password}\r\n               id={'password'}\r\n               label={'Password'}\r\n               type={\"password\"}\r\n               autoComplete={\"current-password\"}\r\n               margin={\"normal\"}\r\n               variant={'outlined'}\r\n               {...register('password', {required: true})} />\r\n\r\n            <FormControlLabel style={{\r\n               margin: '20px 0',\r\n               alignSelf: 'self-start'\r\n            }} control={\r\n               <Checkbox\r\n                  color={'primary'}\r\n                  {...register(\"remember\", {required: false})}/>\r\n            } label={'Remember me?'}/>\r\n\r\n\r\n            {captchaUrl &&\r\n            <div style={{\r\n               marginBottom: '20px',\r\n               textAlign: 'center'\r\n            }}>\r\n               <img src={captchaUrl} alt=\"captcha\"/>\r\n               <TextField\r\n                  required\r\n                  fullWidth\r\n                  size={'small'}\r\n                  helperText={errors.captcha?.message}\r\n                  error={!!errors.captcha}\r\n                  label={'Enter captcha'}\r\n                  margin={\"normal\"}\r\n                  variant={'outlined'}\r\n                  {...register('captcha', {required: true})} />\r\n            </div>\r\n            }\r\n\r\n            <Button\r\n               style={{\r\n                  fontFamily: `Mochiy Pop P One, sans-serif`\r\n               }}\r\n               fullWidth\r\n               variant={\"contained\"}\r\n               color=\"primary\"\r\n               onClick={handleClick}\r\n               type={\"submit\"}>Login</Button>\r\n         </form>\r\n      </Container>\r\n   )\r\n}\r\n\r\nexport default LoginPage","import React from \"react\";\r\nimport s from './ProfileInfo.module.scss'\r\n\r\nimport {ContactsType} from \"../../../redux/reducer/profile-reducer\";\r\n\r\ntype ProfileContactType = {\r\n   contacts: ContactsType\r\n}\r\n\r\n\r\nexport const ProfileContact: React.FC<ProfileContactType> = (props) => {\r\n\r\n   return (\r\n      <div className={s.profileContact}>\r\n         <span className={s.contactTitle}>My Contact</span>\r\n         <ul className={s.profileContactList}>\r\n            <li className={s.profileContactItem}>\r\n               <a target='blank'\r\n                  href={props.contacts.facebook ? props.contacts.facebook : '#'}\r\n                  className={props.contacts.facebook ? `${s.linkFacebook} ${s.defaultLink}` : ` ${s.defaultLink} ${s.linkFacebook} ${s.linkNone}`}> </a>\r\n            </li>\r\n\r\n            <li className={s.profileContactItem}>\r\n               <a target='blank'\r\n                  href={props.contacts.vk ? props.contacts.vk : '#'}\r\n                  className={props.contacts.vk ? `${s.linkVk} ${s.defaultLink}` : `${s.linkVk} ${s.defaultLink} ${s.linkNone}`}> </a>\r\n            </li>\r\n\r\n            <li className={s.profileContactItem}>\r\n               <a target='blank'\r\n                  href={props.contacts.twitter ? props.contacts.twitter : '#'}\r\n                  className={props.contacts.twitter ? `${s.linkTwitter} ${s.defaultLink}` : `${s.linkTwitter} ${s.defaultLink} ${s.linkNone}`}> </a>\r\n            </li>\r\n\r\n            <li className={s.profileContactItem}>\r\n               <a target='blank'\r\n                  href={props.contacts.instagram ? props.contacts.instagram : '#'}\r\n                  className={props.contacts.instagram ? `${s.linkInstagram} ${s.defaultLink}` : `${s.linkInstagram} ${s.defaultLink} ${s.linkNone}`}> </a>\r\n            </li>\r\n\r\n            <li className={s.profileContactItem}>\r\n               <a target='blank'\r\n                  href={props.contacts.youtube ? props.contacts.youtube : '#'}\r\n                  className={props.contacts.youtube ? `${s.linkYoutube} ${s.defaultLink}` : `${s.linkYoutube} ${s.defaultLink} ${s.linkNone}`}> </a>\r\n            </li>\r\n\r\n            <li className={s.profileContactItem}>\r\n               <a target='blank'\r\n                  href={props.contacts.github ? props.contacts.github : '#'}\r\n                  className={props.contacts.github ? `${s.linkGithub} ${s.defaultLink}` : `${s.linkGithub} ${s.defaultLink} ${s.linkNone}`}> </a>\r\n            </li>\r\n\r\n            <li className={s.profileContactItem}>\r\n               <a target='blank'\r\n                  href={props.contacts.mainLink ? props.contacts.mainLink : '#'}\r\n                  className={props.contacts.mainLink ? `${s.linkMainLink} ${s.defaultLink}` : `${s.linkMainLink} ${s.defaultLink} ${s.linkNone}`}> </a>\r\n            </li>\r\n\r\n            <li className={s.profileContactItem}>\r\n               <a target='blank'\r\n                  href={props.contacts.website ? props.contacts.website : '#'}\r\n                  className={props.contacts.website ? ` ${s.linkWebsite} ${s.defaultLink}` : `${s.linkWebsite} ${s.defaultLink} ${s.linkNone}`}> </a>\r\n            </li>\r\n         </ul>\r\n      </div>\r\n\r\n   )\r\n}\r\n\r\n\r\n\r\n","import {TextField} from \"@material-ui/core\";\r\nimport React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport s from './ProfileInfo.module.scss'\r\n\r\ntype ProfileStatusType = {\r\n   status: string\r\n   updateStatus: (status: string) => void\r\n}\r\n\r\ntype StateType = {\r\n   editMode: boolean\r\n   status: string\r\n\r\n}\r\n\r\nexport const ProfileStatus: React.FC<ProfileStatusType> = (props) => {\r\n   const {status, updateStatus} = props\r\n\r\n   const [state, setState] = useState<StateType>({\r\n      editMode: false,\r\n      status: status,\r\n   })\r\n\r\n   useEffect(() => {\r\n      setState(state => ({...state, status: status}))\r\n   }, [status])\r\n\r\n   const onActivateEditMode = () => setState(state => ({...state, editMode: true}))\r\n\r\n   const offActivateEditMode = () => {\r\n      setState(state => ({...state, editMode: false}))\r\n      updateStatus(state.status)\r\n   }\r\n\r\n   const onChangeStatusInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n      e.target.value.length < 310 && setState(state => ({...state, status: e.target.value}))\r\n   }\r\n\r\n   return (\r\n      <div className={s.statusUser}>\r\n         Status:\r\n         {state.editMode\r\n            ? <span className={s.editBlock}>\r\n               <TextField autoFocus\r\n                          multiline\r\n                          minRows={1}\r\n                          maxRows={15}\r\n                          fullWidth\r\n                          onBlur={offActivateEditMode}\r\n                          onChange={onChangeStatusInput}\r\n                          value={state.status}/>\r\n            </span>\r\n            : <span className={s.editBlock}>\r\n               <span className={s.stateStatus}\r\n                     onClick={onActivateEditMode}> {state.status || 'No status specified'}</span>\r\n            </span>}\r\n      </div>\r\n   )\r\n}\r\n","import React from \"react\";\r\nimport s from './ProfileInfo.module.scss'\r\nimport {ProfileType} from \"../../../redux/reducer/profile-reducer\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {ProfileContact} from \"./ProfileContact\";\r\nimport {ProfileStatus} from \"./ProfileStatus\";\r\n\r\ntype ProfileInfoType = {\r\n   profile: ProfileType\r\n   authorizedProfile: boolean\r\n   setEditMode: (value: boolean) => void\r\n   updateStatus: (status: string) => void\r\n   status: string\r\n}\r\n\r\nexport const ProfileInfo: React.FC<ProfileInfoType> = (props) => {\r\n   const setEditModeHandler = () => props.setEditMode(true)\r\n\r\n   return (\r\n      <div className={s.wrap}>\r\n         {props.authorizedProfile\r\n            ? <ProfileStatus updateStatus={props.updateStatus} status={props.status}/>\r\n            : <div className={s.statusUser}>Status: <span>{props.status || 'No status specified'}</span></div>}\r\n\r\n         <ul className={s.profileContent}>\r\n            <li className={s.fullName}>\r\n               Full name:\r\n               <span\r\n                  className={s.spanDefault}>{props.profile.fullName ? props.profile.fullName : 'Data not filled'}</span>\r\n            </li>\r\n            <li className={s.aboutMe}>\r\n               About me:\r\n               <span\r\n                  className={s.spanDefault}>{props.profile.aboutMe ? props.profile.aboutMe : 'Data not filled'}</span>\r\n            </li>\r\n            <li className={s.lookingForAJob}>\r\n               Looking for a job:\r\n               <span\r\n                  className={s.spanDefault}>{props.profile.lookingForAJob ? 'Yes' : 'No'}</span>\r\n            </li>\r\n            <li className={s.lookingForAJobDescription}>\r\n               Looking for a job description:\r\n               <span\r\n                  className={s.spanDefault}>{props.profile.lookingForAJobDescription ? props.profile.lookingForAJobDescription : 'Data not filled'}</span>\r\n            </li>\r\n         </ul>\r\n\r\n         <div className={s.contactsWrap}>\r\n            <ProfileContact contacts={props.profile.contacts}/>\r\n\r\n            {props.authorizedProfile &&\r\n            <Button\r\n               style={{fontFamily: `Mochiy Pop P One, sans-serif`, letterSpacing: '2px'}}\r\n               fullWidth\r\n               variant=\"contained\"\r\n               color=\"primary\"\r\n               onClick={setEditModeHandler}>Edit Profile Info</Button>}\r\n         </div>\r\n      </div>\r\n\r\n   )\r\n}\r\n\r\n\r\n\r\n","import React, {useState} from \"react\";\r\nimport {ProfileEditFormType, ProfileType, saveProfile} from \"../../../redux/reducer/profile-reducer\";\r\nimport {Button, Checkbox, Container, FormControlLabel, makeStyles, TextField} from \"@material-ui/core\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport {SubmitHandler, useForm} from \"react-hook-form\";\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateT} from \"../../../redux/redux-store\";\r\nimport s from './ProfileInfo.module.scss'\r\n\r\ntype ProfileInfoType = {\r\n   profile: ProfileType\r\n   setEditMode: (value: boolean) => void\r\n}\r\n\r\nexport const ProfileInfoEditForm: React.FC<ProfileInfoType> = (props) => {\r\n   const [openTooltip, setOpenTooltip] = useState<boolean>(false)\r\n   const handleClick = () => setOpenTooltip(true)\r\n   const handleClose = () => setOpenTooltip(false)\r\n\r\n   const dispatch = useDispatch()\r\n\r\n   const profile = useSelector<AppRootStateT, ProfileType | null>(state => state.profilePage.profile)\r\n\r\n   const schema = yup.object().shape({\r\n      aboutMe: yup\r\n         .string()\r\n         .required('About me is a required field'),\r\n      fullName: yup\r\n         .string()\r\n         .required('Full name is a required field'),\r\n      lookingForAJobDescription: yup\r\n         .string()\r\n         .required('Description is a required field'),\r\n      contacts: yup.object().shape({\r\n         website: yup\r\n            .string()\r\n            .url('Website should have correct format'),\r\n         github: yup\r\n            .string()\r\n            .url('Github should have correct format'),\r\n         vk: yup\r\n            .string()\r\n            .url('Vkontakte should have correct format'),\r\n         facebook: yup\r\n            .string()\r\n            .url('Facebook should have correct format'),\r\n         instagram: yup\r\n            .string()\r\n            .url('Instagram should have correct format'),\r\n         twitter: yup\r\n            .string()\r\n            .url('Twitter should have correct format'),\r\n         youtube: yup\r\n            .string()\r\n            .url('Youtube should have correct format'),\r\n         mainLink: yup\r\n            .string()\r\n            .url('MainLink should have correct format'),\r\n      })\r\n   })\r\n\r\n   const {register, handleSubmit, formState: {errors}} = useForm<ProfileEditFormType>({\r\n      defaultValues: {\r\n         aboutMe: profile?.aboutMe,\r\n         fullName: profile?.fullName,\r\n         lookingForAJob: profile?.lookingForAJob,\r\n         lookingForAJobDescription: profile?.lookingForAJobDescription,\r\n         contacts: {\r\n            github: profile?.contacts.github,\r\n            vk: profile?.contacts.vk,\r\n            facebook: profile?.contacts.facebook,\r\n            instagram: profile?.contacts.instagram,\r\n            mainLink: profile?.contacts.mainLink,\r\n            twitter: profile?.contacts.twitter,\r\n            website: profile?.contacts.website,\r\n            youtube: profile?.contacts.youtube,\r\n         }\r\n      },\r\n      mode: \"onBlur\",\r\n      resolver: yupResolver(schema)\r\n   })\r\n\r\n   const onSubmit: SubmitHandler<ProfileEditFormType> = (data) => {\r\n      dispatch(saveProfile(data))\r\n      props.setEditMode(false)\r\n      console.log(data)\r\n   }\r\n\r\n   const useStyles = makeStyles(() => ({\r\n      position: {\r\n         display: 'flex',\r\n         justifyContent: 'center',\r\n         flexDirection: 'column',\r\n         alignItems: 'center',\r\n         padding: '0'\r\n      },\r\n      container: {\r\n         margin: '100px 0'\r\n      },\r\n      width: {\r\n         width: '100%'\r\n      },\r\n      btn: {\r\n         width: '200px'\r\n      },\r\n      input: {\r\n         height: '30px'\r\n      }\r\n   }))\r\n\r\n   return (\r\n      <Container className={`${useStyles().position}`}>\r\n         <Snackbar\r\n            anchorOrigin={{vertical: 'top', horizontal: \"right\"}}\r\n            open={openTooltip}\r\n            autoHideDuration={2000}\r\n            onClose={handleClose}>\r\n            <MuiAlert\r\n               style={{\r\n                  fontFamily: `Mochiy Pop P One, sans-serif`,\r\n                  letterSpacing: '2px'\r\n               }}\r\n               variant=\"filled\"\r\n               onClose={handleClose}\r\n               severity={!!errors ? 'error' : 'success'}>\r\n               {!!errors ? 'Data is filled incorrectly!!!' : 'Data saved!!!'}\r\n            </MuiAlert>\r\n         </Snackbar>\r\n\r\n         <form\r\n            className={`${useStyles().position} ${useStyles().width}`}\r\n            noValidate\r\n            onSubmit={handleSubmit(onSubmit)}>\r\n\r\n            <div className={s.profileEditWrap}>\r\n               <div className={s.profileEditInfo}>\r\n                  <span className={s.profileEditInfoDesc}>Profile info:</span>\r\n\r\n                  <TextField\r\n                     fullWidth\r\n                     required\r\n                     helperText={errors.fullName?.message}\r\n                     error={!!errors.fullName}\r\n                     label={'Full name:'}\r\n                     margin={\"normal\"}\r\n                     variant={'outlined'}\r\n                     {...register(\"fullName\")} />\r\n\r\n                  <TextField\r\n                     fullWidth\r\n                     required\r\n                     helperText={errors.aboutMe?.message}\r\n                     error={!!errors.aboutMe}\r\n                     label={'About me:'}\r\n                     margin={\"normal\"}\r\n                     variant={'outlined'}\r\n                     multiline\r\n                     minRows={2}\r\n                     maxRows={10}\r\n                     {...register('aboutMe')} />\r\n\r\n                  <TextField\r\n                     fullWidth\r\n                     required\r\n                     helperText={errors.lookingForAJobDescription?.message}\r\n                     error={!!errors.lookingForAJobDescription}\r\n                     label={'Looking for a job description:'}\r\n                     margin={\"normal\"}\r\n                     variant={'outlined'}\r\n                     multiline\r\n                     minRows={2}\r\n                     maxRows={10}\r\n                     {...register('lookingForAJobDescription')} />\r\n\r\n\r\n                  <FormControlLabel style={{\r\n                     margin: '20px 0',\r\n                     alignSelf: 'self-start'\r\n                  }} control={\r\n                     <Checkbox\r\n                        defaultChecked={profile ? profile.lookingForAJob : false}\r\n                        color={'primary'}\r\n                        {...register(\"lookingForAJob\")}/>\r\n                  } label={'Looking for a job?'}/>\r\n               </div>\r\n               <div className={s.profileEditContact}>\r\n                  <span className={s.profileEditContactDesc}>Contacts:</span>\r\n                  <div className={s.profileEditContactWrap}>\r\n                     <div className={s.profileEditContactLeft}>\r\n                        <TextField\r\n                           helperText={errors.contacts?.facebook?.message}\r\n                           error={!!errors.contacts?.facebook}\r\n                           fullWidth\r\n                           size={'small'}\r\n                           label={'Facebook:'}\r\n                           margin={\"normal\"}\r\n                           variant={'outlined'}\r\n                           {...register(\"contacts.facebook\")} />\r\n\r\n                        <TextField\r\n                           fullWidth\r\n                           size={'small'}\r\n                           helperText={errors.contacts?.vk?.message}\r\n                           error={!!errors.contacts?.vk}\r\n                           label={'Vkontakte:'}\r\n                           margin={\"normal\"}\r\n                           variant={'outlined'}\r\n                           {...register(\"contacts.vk\")} />\r\n\r\n                        <TextField\r\n                           fullWidth\r\n                           helperText={errors.contacts?.twitter?.message}\r\n                           error={!!errors.contacts?.twitter}\r\n                           size={'small'}\r\n                           label={'Twitter:'}\r\n                           margin={\"normal\"}\r\n                           variant={'outlined'}\r\n                           {...register(\"contacts.twitter\")} />\r\n\r\n                        <TextField\r\n                           fullWidth\r\n                           size={'small'}\r\n                           helperText={errors.contacts?.instagram?.message}\r\n                           error={!!errors.contacts?.instagram}\r\n                           label={'Instagram:'}\r\n                           margin={\"normal\"}\r\n                           variant={'outlined'}\r\n                           {...register(\"contacts.instagram\")} />\r\n\r\n                     </div>\r\n                     <div className={s.profileEditContactRight}>\r\n                        <TextField\r\n                           fullWidth\r\n                           size={'small'}\r\n                           helperText={errors.contacts?.youtube?.message}\r\n                           error={!!errors.contacts?.youtube}\r\n                           label={'Youtube:'}\r\n                           margin={\"normal\"}\r\n                           variant={'outlined'}\r\n                           {...register(\"contacts.youtube\")} />\r\n\r\n\r\n                        <TextField\r\n                           fullWidth\r\n                           size={'small'}\r\n                           helperText={errors.contacts?.github?.message}\r\n                           error={!!errors.contacts?.github}\r\n                           label={'Github:'}\r\n                           margin={\"normal\"}\r\n                           variant={'outlined'}\r\n                           {...register(\"contacts.github\")} />\r\n\r\n                        <TextField\r\n                           fullWidth\r\n                           size={'small'}\r\n                           helperText={errors.contacts?.mainLink?.message}\r\n                           error={!!errors.contacts?.mainLink}\r\n                           label={'Main Link:'}\r\n                           margin={\"normal\"}\r\n                           variant={'outlined'}\r\n                           {...register(\"contacts.mainLink\")} />\r\n\r\n                        <TextField\r\n                           fullWidth\r\n                           size={'small'}\r\n                           helperText={errors.contacts?.website?.message}\r\n                           error={!!errors.contacts?.website}\r\n                           label={'Website:'}\r\n                           margin={\"normal\"}\r\n                           variant={'outlined'}\r\n                           {...register(\"contacts.website\")} />\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            <Button\r\n               style={{\r\n                  fontFamily: `Mochiy Pop P One, sans-serif`\r\n               }}\r\n               className={useStyles().btn}\r\n               fullWidth\r\n               variant={\"contained\"}\r\n               color=\"primary\"\r\n               type={\"submit\"}\r\n               onClick={handleClick}\r\n            >Save</Button>\r\n         </form>\r\n      </Container>\r\n\r\n   )\r\n}\r\n\r\n\r\n\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport s from './ProfileInfo.module.scss'\r\nimport {ProfileContainerType} from \"../Profile\";\r\nimport {ProfileInfo} from \"./ProfileInfo\";\r\nimport {ProfileInfoEditForm} from \"./ProfileInfoEditForm\";\r\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\r\nimport {Button} from \"@material-ui/core\";\r\nimport {Avatar, Image} from 'antd';\r\n\r\ntype ProfileInfoType = {\r\n   authorizedProfile: boolean\r\n}\r\n\r\n\r\nexport const ProfileDesc: React.FC<ProfileContainerType & ProfileInfoType> = (props) => {\r\n   const defaultAvatar = (src: string | null | undefined) => src ? src : 'https://media.istockphoto.com/vectors/web-developer-blue-rgb-color-icon-computer-software-development-pc-vector-id1251725147?k=20&m=1251725147&s=170667a&w=0&h=dP5REX1HGPDsX_YVsuvXubqJGhN-pg9_ooSkurdWPAA='\r\n   const uploadPhotoHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n      e.target.files && props.savePhoto(e.target.files[0])\r\n   }\r\n\r\n   const [editMode, setEditMode] = useState<boolean>(false)\r\n\r\n   if (!props.profile) {\r\n      return <div>No profile, error!!!</div>\r\n   }\r\n\r\n   return (\r\n      <div className={s.profileWrap}>\r\n         <span className={s.profileBackground}> <img\r\n            src='https://images.unsplash.com/photo-1542903660-eedba2cda473?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1000&q=80'\r\n            alt=\"logo\"/> </span>\r\n         <div className={s.profileDesc}>\r\n            <div className={s.flexLeft}>\r\n               <div className={s.profileAvatar}>\r\n                  <Avatar style={props.profile?.photos.large ? {} : {border: '2px solid #7e7e7e', borderRadius: '5px'}}\r\n                          size={300} shape={'square'}\r\n                          src={<Image src={defaultAvatar(props.profile?.photos.large)}/>}/>\r\n               </div>\r\n               {props.authorizedProfile &&\r\n               <label htmlFor=\"contained-button-file\">\r\n                  <input onChange={uploadPhotoHandler}\r\n                         style={{display: \"none\"}}\r\n                         id=\"contained-button-file\"\r\n                         accept=\"image/*\"\r\n                         multiple type=\"file\"/>\r\n                  <Button style={{fontFamily: `Mochiy Pop P One, sans-serif`, fontSize: '12px'}}\r\n                          color={'primary'}\r\n                          variant=\"contained\"\r\n                          component=\"span\">\r\n                     Click to Upload\r\n                     <AddPhotoAlternateIcon/>\r\n                  </Button>\r\n               </label>\r\n\r\n               }\r\n            </div>\r\n\r\n            <div className={s.profileInfo}>\r\n\r\n               {editMode\r\n                  ? <ProfileInfoEditForm\r\n                     setEditMode={setEditMode}\r\n                     profile={props.profile}/>\r\n                  : <ProfileInfo\r\n                     updateStatus={props.updateStatus}\r\n                     status={props.status}\r\n                     setEditMode={setEditMode}\r\n                     authorizedProfile={props.authorizedProfile}\r\n                     profile={props.profile}/>}\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\n\r\n","import {AppRootStateT} from \"../redux-store\";\r\n\r\nexport const getProfile = (state: AppRootStateT) => state.profilePage.profile\r\n\r\nexport const getProfileStatus = (state: AppRootStateT) => state.profilePage.status\r\n\r\nexport const getAuthorizedUserId = (state: AppRootStateT) => state.auth.userData ? state.auth.userData.id : 0","import React, {useState} from \"react\";\r\nimport s from './Post.module.scss'\r\nimport {IconButton, Paper} from \"@material-ui/core\";\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {deletePostSuccess, setLikeSuccess} from \"../../../../redux/reducer/profile-reducer\";\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\n\r\ntype PostPropsType = {\r\n   message: string,\r\n   likesCount: number,\r\n   profileAvatar: string | null | undefined\r\n   id: string\r\n   authorizedProfile: boolean\r\n}\r\n\r\nexport const Post: React.FC<PostPropsType> = (props) => {\r\n   const defaultAvatar = (src: string | null | undefined) => src ? src : 'https://cdn3.iconfinder.com/data/icons/avatars-15/64/_Ninja-2-512.png'\r\n   const [like, setLike] = useState<boolean>(false)\r\n\r\n   const dispatch = useDispatch()\r\n\r\n   const likePost = () => {\r\n      setLike(state => !state)\r\n      dispatch(setLikeSuccess(props.likesCount + 1, props.id))\r\n   }\r\n\r\n   const removeLikePost = () => {\r\n      setLike(state => !state)\r\n      dispatch(setLikeSuccess(props.likesCount - 1, props.id))\r\n   }\r\n\r\n   const deletePost = () => dispatch(deletePostSuccess(props.id))\r\n\r\n   return (\r\n      <div className={s.wrap}>\r\n         <Paper style={{width: '100%'}} elevation={5}>\r\n            <div className={s.post}>\r\n               <div className={s.postWrap}>\r\n                  <span className={s.postAvatar}><img src={defaultAvatar(props.profileAvatar)} alt=\"avatar\"/></span>\r\n\r\n                  <p className={s.desc}>\r\n                     {props.message}\r\n                  </p>\r\n\r\n               </div>\r\n\r\n               <div className={s.likeControl}>\r\n                  {like\r\n                     ? <IconButton color=\"primary\"\r\n                                   aria-label=\"like post\"\r\n                                   component=\"span\"\r\n                                   onClick={removeLikePost}\r\n                                   size={'medium'}>\r\n                        <FavoriteIcon fontSize={'medium'}/>\r\n                     </IconButton>\r\n                     : <IconButton color=\"primary\"\r\n                                   aria-label=\"like post\"\r\n                                   component=\"span\"\r\n                                   onClick={likePost}\r\n                     >\r\n                        <FavoriteBorderIcon fontSize={'medium'}/>\r\n                     </IconButton>}\r\n                  <span className={s.likeCount}>{props.likesCount} </span>\r\n\r\n                  {props.authorizedProfile &&\r\n                  <div className={s.clearIcon}>\r\n                     <IconButton\r\n                        color=\"primary\"\r\n                        aria-label=\"delete post\"\r\n                        component=\"span\"\r\n                        onClick={deletePost}>\r\n                        <ClearIcon fontSize={'large'}/>\r\n                     </IconButton>\r\n                  </div>}\r\n               </div>\r\n            </div>\r\n         </Paper>\r\n      </div>\r\n   )\r\n}","import React, {ChangeEvent} from \"react\";\r\nimport s from './MyPosts.module.scss'\r\nimport {Post} from \"./Post/Post\";\r\n\r\nimport {Button, Paper, TextField} from \"@material-ui/core\";\r\nimport {addPostAC, changeTextAC, ProfilePageType} from \"../../../redux/reducer/profile-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateT} from \"../../../redux/redux-store\";\r\n\r\ntype MyPostsPropsT = {\r\n   authorizedProfile: boolean\r\n}\r\n\r\nexport const MyPosts: React.FC<MyPostsPropsT> = React.memo((props) => {\r\n   const profilePage = useSelector<AppRootStateT, ProfilePageType>(state => state.profilePage)\r\n   const dispatch = useDispatch()\r\n\r\n   const postElem = profilePage.posts.length\r\n      ? profilePage.posts.map(el => <Post\r\n         authorizedProfile={props.authorizedProfile}\r\n         id={el.id}\r\n         profileAvatar={profilePage.profile?.photos.small}\r\n         key={el.id} message={el.message}\r\n         likesCount={el.likesCount}/>)\r\n      : <Paper style={{padding: '20px'}} elevation={2}>\r\n         <div style={{fontFamily: `Mochiy Pop P One, sans-serif`, fontSize: '18px', letterSpacing: '1px'}}>\r\n            There are no posts\r\n         </div>\r\n      </Paper>\r\n\r\n   const onClickForNewPosts = () => dispatch(addPostAC())\r\n\r\n   const onChangeFromTextArea = (e: ChangeEvent<HTMLTextAreaElement>) => dispatch(changeTextAC(e.currentTarget.value))\r\n\r\n   return (\r\n      <div className={s.main}>\r\n         <h3>My post</h3>\r\n\r\n         {props.authorizedProfile &&\r\n         <div className={s.addPost}>\r\n            <div className={s.textFieldWrap}>\r\n               <TextField\r\n                  className={s.textFieldWrap}\r\n                  value={profilePage.newPostText}\r\n                  onChange={onChangeFromTextArea}\r\n                  label=\"You news...\"\r\n                  variant=\"outlined\"/>\r\n            </div>\r\n\r\n            <div className={s.btnWrap}>\r\n               <Button\r\n                  style={{\r\n                     color: 'white',\r\n                     fontFamily: `Mochiy Pop P One, sans-serif`\r\n                  }}\r\n                  className={s.addPostBtn}\r\n                  onClick={onClickForNewPosts}\r\n                  variant=\"contained\"> Add post</Button>\r\n            </div>\r\n         </div>}\r\n         {postElem}\r\n      </div>\r\n   )\r\n})\r\n\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport s from './Profile.module.css'\r\nimport {ProfileDesc} from \"./ProfileInfo/ProfileDesc\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, ProfileType, savePhoto, setUserProfile, updateStatus} from \"../../redux/reducer/profile-reducer\";\r\nimport {AppRootStateT} from \"../../redux/redux-store\";\r\nimport {getAuthorizedUserId, getProfile, getProfileStatus} from \"../../redux/selectors/profile-selector\";\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport {MyPosts} from \"./MyPosts/MyPosts\";\r\nimport {PATH} from \"../../Router/Routes\";\r\n\r\n\r\nexport type ProfileContainerType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nexport const Profile: React.FC<ProfileContainerType> = (props) => {\r\n   const {authorizedUserId, setUserProfile, profile, getStatus} = props\r\n\r\n   const finalClassName = !profile ? `${s.main} ${s.fetching}` : s.main\r\n\r\n   const navigate = useNavigate()\r\n   const {userId} = useParams()\r\n\r\n   useEffect(() => {\r\n      let id = isNaN(Number(userId)) ? authorizedUserId : Number(userId)\r\n\r\n      if (!id) return navigate(PATH.LOGIN)\r\n\r\n      setUserProfile(id)\r\n      getStatus(id)\r\n   }, [userId, setUserProfile, getStatus, authorizedUserId, navigate])\r\n\r\n\r\n   if (!props.profile) {\r\n      return <Preloader/>\r\n   }\r\n\r\n   return (\r\n      <main className={finalClassName}>\r\n         <ProfileDesc authorizedProfile={Number(userId) === authorizedUserId} {...props} />\r\n         <MyPosts authorizedProfile={Number(userId) === authorizedUserId}/>\r\n      </main>\r\n   )\r\n}\r\n\r\nexport type MapStateToPropsType = {\r\n   profile: ProfileType | null\r\n   status: string\r\n   authorizedUserId: number\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n   setUserProfile: (id: number) => void\r\n   getStatus: (id: number) => void\r\n   updateStatus: (status: string) => void\r\n   savePhoto: (file: File) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateT): MapStateToPropsType => {\r\n   return {\r\n      profile: getProfile(state),\r\n      status: getProfileStatus(state),\r\n      authorizedUserId: getAuthorizedUserId(state)\r\n   }\r\n}\r\n\r\nexport const ProfileContainer = connect(mapStateToProps, {\r\n   savePhoto,\r\n   setUserProfile,\r\n   getStatus,\r\n   updateStatus\r\n})(Profile)\r\n\r\nexport default ProfileContainer","import React from \"react\";\r\nimport s from './notFound.module.scss'\r\n\r\n\r\nexport const NotFound: React.FC = () => {\r\n\r\n\r\n   return (\r\n      <div className={s.wrap}>\r\n         <h4 className={s.title}>404 Page Not Found</h4>\r\n      </div>\r\n   )\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/SpotifyIcon.e4c0ed75.svg\";","import React from 'react';\r\nimport {NeonBtn} from \"../common/NeonBtn/NeonBtn\";\r\nimport s from './music.module.scss'\r\nimport logo from '../../image/SpotifyIcon.svg'\r\nimport {AUTH_URL} from \"../../api/spotify-api\";\r\nimport {Tooltip, TooltipProps} from \"@material-ui/core\";\r\nimport {styled} from '@mui/material/styles';\r\nimport {tooltipClasses} from \"@mui/material\";\r\n\r\nexport const LoginSpotify: React.FC = () => {\r\n   const CustomTooltip = styled(({className, ...props}: TooltipProps) => (\r\n      <Tooltip {...props} classes={{popper: className}}/>\r\n   ))(({theme}) => ({\r\n      [`& .${tooltipClasses.tooltip}`]: {\r\n         backgroundColor: '#f5f5f9',\r\n         color: 'rgba(0, 0, 0, 0.87)',\r\n         maxWidth: 320,\r\n         fontSize: 15,\r\n         border: '1px solid #dadde9',\r\n      },\r\n   }));\r\n\r\n   return (\r\n      <div className={s.container}>\r\n         <h2> Music from <span><img src={logo} alt=\"spotifyLogo\"/></span></h2>\r\n\r\n         <p>\r\n            Yo! You can listen to music from Spotify.\r\n         </p>\r\n         <p>\r\n            Application is in\r\n            <CustomTooltip\r\n               title='Up to 25 Spotify users can install and use your app. These users must be explicitly added under the section \"Users and Access\" before they can authenticate with your app. If you’d like to ship your app to a broader audience, let us know by submitting a quota extension request.'>\r\n               <a className={s.dev}\r\n                  target={'blank'}\r\n                  href=\"https://developer.spotify.com/documentation/web-api/guides/development-extended-quota-modes/\">\r\n                  development mode</a>\r\n            </CustomTooltip>\r\n            for testing use a test account!\r\n         </p>\r\n         <p>\r\n            But there are limitations of the test account, you can search for music but cannot listen to it because this\r\n            requires a premium subscription, if you want me to add your account with a premium write to me\r\n            <a target={'blank'}\r\n               className={s.dev}\r\n               href=\"https://web-site-mr-gentleman.vercel.app/\">web-site-mr-gentleman.vercel.app</a>\r\n         </p>\r\n\r\n\r\n         <div className={s.accountCredentials}>\r\n            <span>Email: pecab31632@ritumusic.com</span>\r\n            <span>Password: Account_For_Test</span>\r\n         </div>\r\n\r\n         <NeonBtn\r\n            className={s.btn}\r\n            goAnotherSite={true} link={AUTH_URL}\r\n            name={'Login With Spotify'}/>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {SearchResultsT} from \"./Dashboard\";\r\nimport s from './music.module.scss'\r\n\r\n\r\nexport const SearchResult: React.FC<{ track: SearchResultsT, chooseTrack: (song: any) => void }> = React.memo((\r\n   {\r\n      track,\r\n      chooseTrack\r\n   }) => {\r\n\r\n   const onClickHandler = () => chooseTrack(track)\r\n\r\n   return (\r\n      <div onClick={onClickHandler} className={s.searchResult}>\r\n         <img src={track.albumUrl} alt=\"track album logo\"/>\r\n         <div className={s.descWrap}>\r\n            <div className={s.trackTitle}>{track.title}</div>\r\n            <div className={s.trackArtist}>{track.artist}</div>\r\n         </div>\r\n      </div>\r\n   )\r\n})\r\n\r\n\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport SpotifyPlayer from 'react-spotify-web-playback';\r\n\r\nexport const PlayerSpotify: React.FC<{ token: string, trackUri?: string }> = ({token, trackUri}) => {\r\n   const [play, setPlay] = useState<boolean>(false)\r\n\r\n   useEffect(() => {\r\n      setPlay(true)\r\n   }, [trackUri])\r\n\r\n   if (!token) return <div></div>\r\n\r\n   return <SpotifyPlayer\r\n      styles={{sliderColor: '#1cb954'}}\r\n      showSaveIcon\r\n      play={play}\r\n      callback={state => {\r\n         if (!state.isPlaying) setPlay(false)\r\n      }}\r\n      uris={trackUri ? [trackUri] : []}\r\n      token={token}/>\r\n\r\n\r\n}","export default __webpack_public_path__ + \"static/media/Spotify.c8d377d8.svg\";","import React, {ChangeEvent, useCallback, useEffect, useState} from 'react';\r\nimport {TextField} from \"@material-ui/core\";\r\nimport s from './music.module.scss'\r\nimport {useAuth} from \"./useAuth\";\r\nimport {SearchResult} from \"./SearchResult\";\r\nimport {PlayerSpotify} from \"./PlayerSpotify\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n   getRecommendedTracks,\r\n   getSearchResults,\r\n   setChooseTrack,\r\n   setLyricsOfPlayingSong,\r\n   setSearch,\r\n   setSearchResults\r\n} from \"../../redux/reducer/spotify-reducer\";\r\nimport {spotifyAPI} from \"../../api/spotify-api\";\r\nimport {AppRootStateT} from \"../../redux/redux-store\";\r\nimport {Scrollbars} from 'react-custom-scrollbars';\r\nimport spotifyLogo from '../../image/Spotify.svg'\r\n\r\n\r\nexport type SearchResultsT = {\r\n   artist: string\r\n   title: string\r\n   uri: string\r\n   albumUrl: string\r\n}\r\n\r\nexport const Dashboard: React.FC<{ code: string | null }> = ({code}) => {\r\n   const search = useSelector<AppRootStateT, string>(state => state.spotify.dashboard.search)\r\n   const searchResults = useSelector<AppRootStateT, SearchResultsT[]>(state => state.spotify.dashboard.searchResults)\r\n   const playingTrack = useSelector<AppRootStateT, SearchResultsT | null>(state => state.spotify.dashboard.playingTrack)\r\n   const lyrics = useSelector<AppRootStateT, string>(state => state.spotify.dashboard.lyrics)\r\n   const recommendedTracks = useSelector<AppRootStateT, SearchResultsT[]>(state => state.spotify.recommendedTracks)\r\n\r\n   const [startSearch, setStartSearch] = useState<boolean>(true)\r\n\r\n   const dispatch = useDispatch()\r\n\r\n   const accessToken = useAuth(code as string)\r\n\r\n   const chooseTrack = useCallback((track: SearchResultsT) => {\r\n      startSearch && setStartSearch(false)\r\n      dispatch(setChooseTrack(track))\r\n\r\n   }, [dispatch, startSearch])\r\n\r\n   const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n      !startSearch && setStartSearch(true)\r\n      dispatch(setSearch(e.currentTarget.value.trimLeft()))\r\n   }\r\n\r\n   useEffect(() => {\r\n      if (!playingTrack) return\r\n\r\n      dispatch(setLyricsOfPlayingSong(playingTrack.title, playingTrack.artist))\r\n   }, [playingTrack, dispatch])\r\n\r\n   useEffect(() => {\r\n      if (!accessToken) return\r\n\r\n      spotifyAPI.setAccessToken(accessToken)\r\n   }, [accessToken])\r\n\r\n   useEffect(() => {\r\n      if (!accessToken) return\r\n\r\n      dispatch(getRecommendedTracks())\r\n\r\n   }, [accessToken, playingTrack, dispatch])\r\n\r\n   useEffect(() => {\r\n      if (!search) {\r\n         dispatch(setSearchResults([]))\r\n         return\r\n      }\r\n      if (!accessToken) return\r\n\r\n      let cancel = false\r\n\r\n      dispatch(getSearchResults(search, cancel))\r\n\r\n      return () => {\r\n         cancel = true\r\n      }\r\n   }, [search, accessToken, dispatch])\r\n\r\n   const trackSearchResult = searchResults.map((track) => {\r\n      return <SearchResult chooseTrack={chooseTrack} track={track} key={track.uri}/>\r\n   })\r\n\r\n   const recommendedMusic = recommendedTracks.map((track) => {\r\n      return <SearchResult chooseTrack={chooseTrack} track={track} key={track.uri}/>\r\n   })\r\n\r\n   return (\r\n      <div className={s.wrap}>\r\n         <div className={s.title}>Spotify music <span><img src={spotifyLogo} alt=\"spotify logo\"/></span></div>\r\n\r\n         <TextField\r\n            variant={'outlined'}\r\n            margin={\"normal\"}\r\n            fullWidth\r\n            value={search}\r\n            onChange={onChangeHandler}\r\n            label={'Search song/artist/'}/>\r\n\r\n         <div className={s.song}>\r\n            <Scrollbars>\r\n               {trackSearchResult}\r\n\r\n               {startSearch && !search && !searchResults.length &&\r\n               <div className={s.recommendedTracks}>\r\n                  <span>Random recommended tracks. </span>\r\n                  {recommendedMusic}\r\n               </div>}\r\n\r\n               {search && !searchResults.length &&\r\n               <div className={s.notSearch}>\r\n                  There is nothing for \"<span>{search}</span>\".\r\n                  <span>Check for typos or try another query.</span>\r\n               </div>}\r\n\r\n               {!startSearch && playingTrack &&\r\n               <div className={lyrics === 'No Lyrics Found' ? `${s.lyrics} ${s.notFound}` : s.lyrics}>{lyrics}</div>}\r\n            </Scrollbars>\r\n         </div>\r\n\r\n         <div className={playingTrack ? s.player : `${s.player} ${s.none}`}>\r\n            <PlayerSpotify\r\n               trackUri={playingTrack?.uri}\r\n               token={accessToken ? accessToken : ''}/>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\n","import {useEffect} from \"react\"\r\nimport {useNavigate,} from \"react-router-dom\";\r\nimport {loginTokenSpotify, refreshTokenSpotify} from \"../../redux/reducer/spotify-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateT} from \"../../redux/redux-store\";\r\nimport {PATH} from \"../../Router/Routes\";\r\n\r\nexport const useAuth = (code: string) => {\r\n   const accessToken = useSelector<AppRootStateT, string>(state => state.spotify.token.accessToken)\r\n   const refreshToken = useSelector<AppRootStateT, string>(state => state.spotify.token.refreshToken)\r\n   const expiresIn = useSelector<AppRootStateT, number>(state => state.spotify.token.expiresIn)\r\n\r\n   const dispatch = useDispatch()\r\n\r\n   const navigate = useNavigate()\r\n\r\n   useEffect(() => {\r\n      if (!accessToken) dispatch(loginTokenSpotify(code))\r\n\r\n      navigate(PATH.SPOTIFY_MUSIC)\r\n   }, [code, dispatch])\r\n\r\n   useEffect(() => {\r\n      if (!refreshToken || !expiresIn) return\r\n\r\n      const interval = setInterval(() => {\r\n         dispatch(refreshTokenSpotify(refreshToken))\r\n\r\n         navigate(PATH.SPOTIFY_MUSIC)\r\n      }, (expiresIn - 60) * 1000)\r\n\r\n      return () => clearInterval(interval)\r\n   }, [refreshToken, expiresIn, dispatch])\r\n\r\n   return accessToken\r\n}","import React from 'react';\r\nimport {LoginSpotify} from \"./LoginSpotify\";\r\nimport {Dashboard} from \"./Dashboard\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateT} from \"../../redux/redux-store\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\n\r\nconst code = new URLSearchParams(window.location.search).get(\"code\")\r\n\r\nexport const Music = () => {\r\n   const isFetching = useSelector<AppRootStateT, boolean>(state => state.spotify.isFetching)\r\n\r\n\r\n   return (\r\n      <>\r\n         {isFetching && <Preloader/>}\r\n\r\n         {code ? <Dashboard code={code}/> : <LoginSpotify/>}\r\n      </>\r\n   )\r\n}","import axios from \"axios\";\r\nimport SpotifyWebApi from \"spotify-web-api-node\";\r\n\r\nexport const AUTH_URL =\r\n   \"https://accounts.spotify.com/authorize?client_id=ea7ec046e46f4faea91091b10e65d993&response_type=code&redirect_uri=https://mr-g3ntl3man.github.io/Social_Network/&scope=streaming%20user-read-email%20user-read-private%20user-library-read%20user-library-modify%20user-read-playback-state%20user-modify-playback-state\"\r\n\r\n\r\nconst instance = axios.create({\r\n   baseURL: 'https://spotify-provider-server.herokuapp.com/'\r\n})\r\n\r\nconst spotifyWebApi = new SpotifyWebApi({\r\n   clientId: 'ea7ec046e46f4faea91091b10e65d993',\r\n})\r\n\r\ntype loginSpotifyR = {\r\n   accessToken: string\r\n   expiresIn: number\r\n   refreshToken: string\r\n}\r\n\r\nexport const spotifyAPI = {\r\n   loginToken(code: string) {\r\n      return instance.post<loginSpotifyR>(\"loginSpotify\", {code,})\r\n         .then(res => res.data)\r\n   },\r\n   refreshToken(token: string) {\r\n      return instance.post<{ expiresIn: number, refreshToken: string }>(\"refreshToken\", {token,})\r\n         .then(res => res.data)\r\n   },\r\n   getLyrics(title: string, artist: string) {\r\n      return instance.get<{ lyrics: string }>('lyrics', {\r\n         params: {track: title, artist: artist,}\r\n      })\r\n         .then(res => res.data)\r\n   },\r\n   searchTracks(search: string) {\r\n      return spotifyWebApi.searchTracks(search)\r\n   },\r\n   setAccessToken(accessToken: string) {\r\n      return spotifyWebApi.setAccessToken(accessToken)\r\n   },\r\n   getRecommended() {\r\n      return spotifyWebApi.getRecommendations({\r\n         min_energy: 0.4,\r\n         seed_genres: [\"chill\", \"dance\", \"study\", \"deep-house\"],\r\n         min_popularity: 70\r\n      })\r\n   },\r\n   getAvailableGenreSeeds() {\r\n      return spotifyWebApi.getAvailableGenreSeeds()\r\n   }\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"homePage_wrap__3aeN-\",\"mainTitle\":\"homePage_mainTitle__2REBg\",\"flash-border\":\"homePage_flash-border__1cyxj\",\"printed-text\":\"homePage_printed-text__1WDDQ\",\"desc\":\"homePage_desc__9iIaD\",\"descTeh\":\"homePage_descTeh__1vAys\",\"accountCredentials\":\"homePage_accountCredentials__39xwD\",\"btnGroup\":\"homePage_btnGroup__U5STf\",\"testInfo\":\"homePage_testInfo__1kV_y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrap\":\"ProfileInfo_profileWrap__dTJBM\",\"profileBackground\":\"ProfileInfo_profileBackground__ennnz\",\"profileAvatar\":\"ProfileInfo_profileAvatar__2juhR\",\"profileContactList\":\"ProfileInfo_profileContactList__1YKd3\",\"profileContact\":\"ProfileInfo_profileContact__k4A-4\",\"profileContactItem\":\"ProfileInfo_profileContactItem__ocOqk\",\"profileDesc\":\"ProfileInfo_profileDesc__1IYgn\",\"defaultLink\":\"ProfileInfo_defaultLink__1v5m4\",\"linkFacebook\":\"ProfileInfo_linkFacebook__14jZt\",\"linkWebsite\":\"ProfileInfo_linkWebsite__3ZEKu\",\"linkVk\":\"ProfileInfo_linkVk__3M-h5\",\"linkTwitter\":\"ProfileInfo_linkTwitter__3xy-Q\",\"linkInstagram\":\"ProfileInfo_linkInstagram__1XgjA\",\"linkYoutube\":\"ProfileInfo_linkYoutube__37Z6e\",\"linkGithub\":\"ProfileInfo_linkGithub__2067l\",\"linkMainLink\":\"ProfileInfo_linkMainLink__2_TSX\",\"linkNone\":\"ProfileInfo_linkNone__1aNb8\",\"contactTitle\":\"ProfileInfo_contactTitle__3UIBW\",\"profileContent\":\"ProfileInfo_profileContent__u70Mt\",\"profileAbout\":\"ProfileInfo_profileAbout__LjydU\",\"profileInfo\":\"ProfileInfo_profileInfo__3PGLA\",\"aboutMe\":\"ProfileInfo_aboutMe__1eWMg\",\"fullName\":\"ProfileInfo_fullName__34vME\",\"lookingForAJob\":\"ProfileInfo_lookingForAJob__BcGjc\",\"lookingForAJobDescription\":\"ProfileInfo_lookingForAJobDescription__2vdIb\",\"spanDefault\":\"ProfileInfo_spanDefault__3gNJL\",\"statusUser\":\"ProfileInfo_statusUser__2x86m\",\"status\":\"ProfileInfo_status__1-LgD\",\"editBlock\":\"ProfileInfo_editBlock__2SKFF\",\"profileEditForm\":\"ProfileInfo_profileEditForm__31ihJ\",\"profileEditWrap\":\"ProfileInfo_profileEditWrap__1zY0s\",\"profileEditInfo\":\"ProfileInfo_profileEditInfo__2769m\",\"profileEditContact\":\"ProfileInfo_profileEditContact__2GGj0\",\"profileEditContactWrap\":\"ProfileInfo_profileEditContactWrap__1IOec\",\"profileEditContactLeft\":\"ProfileInfo_profileEditContactLeft__2VnPo\",\"profileEditContactRight\":\"ProfileInfo_profileEditContactRight__1RIo7\",\"profileEditContactDesc\":\"ProfileInfo_profileEditContactDesc__2MsaY\",\"profileEditInfoDesc\":\"ProfileInfo_profileEditInfoDesc__RNUV4\",\"contactsWrap\":\"ProfileInfo_contactsWrap__aw9L5\",\"flexLeft\":\"ProfileInfo_flexLeft__sRbrb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__k4GZ-\",\"wrap\":\"Post_wrap__3EhAP\",\"desc\":\"Post_desc__Ughsy\",\"postAvatar\":\"Post_postAvatar__3pshJ\",\"like\":\"Post_like__2ZYAF\",\"likeControl\":\"Post_likeControl__1_JgD\",\"dislike\":\"Post_dislike__UsBGU\",\"likeCount\":\"Post_likeCount__1vi1d\",\"postWrap\":\"Post_postWrap__WvrdL\",\"clearIcon\":\"Post_clearIcon__3t0I1\"};","import React, {FC} from \"react\";\r\nimport s from './preloader.module.css'\r\n\r\n\r\nexport const Preloader: FC = () => {\r\n   return (\r\n      <div className={s.preloader}>\r\n         <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"300px\" height=\"300px\" viewBox=\"0 0 100 100\"\r\n              preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(50 50)\">\r\n               <g transform=\"scale(1 -1)\">\r\n                  <g transform=\"translate(-50 -50)\">\r\n                     <g>\r\n                        <animateTransform attributeName=\"transform\" type=\"rotate\" values=\"-2 50 50;359 50 50\"\r\n                                          keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" calcMode=\"spline\"\r\n                                          keySplines=\"0.5 0 0.5 1\"></animateTransform>\r\n                        <circle cx=\"50\" cy=\"50\" r=\"39.891\" stroke=\"#ffffff\" stroke-width=\"14.4\" fill=\"none\"\r\n                                stroke-dasharray=\"0 300\">\r\n                           <animate attributeName=\"stroke-dasharray\" values=\"10 300;60.15421082128821 300;4 300\"\r\n                                    keyTimes=\"0;0.5;1\" dur=\"1s\" repeatCount=\"indefinite\" calcMode=\"linear\"\r\n                                    keySplines=\"0 1 1 0;0 1 1 0\"></animate>\r\n                        </circle>\r\n                        <circle cx=\"50\" cy=\"50\" r=\"39.891\" stroke=\"#ffffff\" stroke-width=\"7.2\" fill=\"none\"\r\n                                stroke-dasharray=\"0 300\">\r\n                           <animate attributeName=\"stroke-dasharray\" values=\"10 300;60.15421082128821 300;4 300\"\r\n                                    keyTimes=\"0;0.5;1\" dur=\"1s\" repeatCount=\"indefinite\" calcMode=\"linear\"\r\n                                    keySplines=\"0 1 1 0;0 1 1 0\"></animate>\r\n                        </circle>\r\n                        <circle cx=\"50\" cy=\"50\" r=\"32.771\" stroke=\"#0a0a0a\" stroke-width=\"1\" fill=\"none\"\r\n                                stroke-dasharray=\"0 300\">\r\n                           <animate attributeName=\"stroke-dasharray\" values=\"10 300;49.41750376837973 300;4 300\"\r\n                                    keyTimes=\"0;0.5;1\" dur=\"1s\" repeatCount=\"indefinite\" calcMode=\"linear\"\r\n                                    keySplines=\"0 1 1 0;0 1 1 0\"></animate>\r\n                        </circle>\r\n                        <circle cx=\"50\" cy=\"50\" r=\"47.171\" stroke=\"#0a0a0a\" stroke-width=\"1\" fill=\"none\"\r\n                                stroke-dasharray=\"0 300\">\r\n                           <animate attributeName=\"stroke-dasharray\" values=\"10 300;72.03697087422624 300;4 300\"\r\n                                    keyTimes=\"0;0.5;1\" dur=\"1s\" repeatCount=\"indefinite\" calcMode=\"linear\"\r\n                                    keySplines=\"0 1 1 0;0 1 1 0\"></animate>\r\n                        </circle>\r\n                     </g>\r\n                  </g>\r\n               </g>\r\n            </g>\r\n            <g>\r\n               <animateTransform attributeName=\"transform\" type=\"rotate\" values=\"360 50 50;0 50 50\" keyTimes=\"0;1\"\r\n                                 dur=\"1s\" repeatCount=\"indefinite\" calcMode=\"spline\"\r\n                                 keySplines=\"0.5 0 0.5 1\"></animateTransform>\r\n               <path fill=\"#ffffff\" stroke=\"#0a0a0a\"\r\n                     d=\"M82.8,50c0,0.9,0.7,2.6,1.8,3.7c0.3,0.3,0.8,0.6,1,1c0.2,0.5,0.2,1-0.1,1.5c-0.3,0.5-0.8,0.9-1.1,1.3 c-0.5,0.5-0.8,1.1-0.9,1.7c-0.2,0.6-0.2,1.2,0.2,1.8c0.6,1,2,1.7,2,2.8c-0.1,0.9-1,1.5-1.4,2.2c-0.3,0.6-0.4,1.2-0.2,1.9 c0.2,0.7,0.5,1.3,1,1.8c1,1,2.4,1.4,3.9,1.5c-1.1-1-1.2-2.7-0.5-4c0.7-1.2,2.2-1.9,2.5-3.3c0.2-1.2-0.4-2.5,0.1-3.6 c0.7-1.5,3.3-1.3,4.1-2.9c0.3-0.9,0-1.9,0.3-2.8c0.2-0.7,0.6-1.1,1-1.5c0.4-0.4,0.8-0.9,0.9-1.6c0.1-0.5,0.1-0.9,0.1-1.6\"></path>\r\n\r\n            </g>\r\n            <g>\r\n               <animateTransform attributeName=\"transform\" type=\"rotate\" values=\"360 50 50;0 50 50\" keyTimes=\"0;1\"\r\n                                 dur=\"1s\" repeatCount=\"indefinite\" calcMode=\"spline\" keySplines=\"0.5 0 0.5 1\"\r\n                                 begin=\"-0.1s\"></animateTransform>\r\n               <path fill=\"#ffffff\" stroke=\"#0a0a0a\"\r\n                     d=\"M82.8,50c-0.1-3.1-0.4-6.2-1.3-9.2c-0.1-0.4-0.2-0.8-0.2-1.2c-0.1-0.4-0.1-0.8,0-1.2c0.1-0.8,0.3-1.6,0.7-2.4 c0.8-1.5,2-3,3.8-3.9l0,0c1.8-0.9,3.8-1,5.6-0.2c0.9,0.4,1.7,1,2.4,1.8c0.3,0.4,0.7,0.8,1,1.3c0.2,0.5,0.4,1,0.6,1.6 c1.4,4.3,1.9,8.8,1.9,13.3\"></path>\r\n               <path fill=\"#f9ae5c\"\r\n                     d=\"M93.6,35.5c0.1,0.4-0.3,0.8-1,1c-0.6,0.2-1.2,0.1-1.3-0.3c-0.1-0.3,0.3-0.8,0.9-1S93.5,35.1,93.6,35.5z\"></path>\r\n               <path fill=\"#f9ae5c\"\r\n                     d=\"M82.3,39.3c0.1,0.3,0.6,0.3,1.3,0.1c0.6-0.2,1.1-0.6,1-0.9c-0.1-0.3-0.7-0.3-1.3-0.1 C82.6,38.6,82.2,39,82.3,39.3z\"></path>\r\n               <path fill=\"#0a0a0a\"\r\n                     d=\"M88.9,37.5c0.1,0.3-0.2,0.7-0.7,0.8c-0.5,0.1-0.9,0-1-0.3c-0.1-0.3,0.2-0.7,0.7-0.8C88.4,37,88.9,37.2,88.9,37.5z\"></path>\r\n               <path fill=\"none\" stroke=\"#0a0a0a\"\r\n                     d=\"M86.2,39.6c0.2,0.6,0.8,0.9,1.4,0.7c0.6-0.2,0.9-0.9,0.6-2.1c0.3,1.2,1,1.7,1.6,1.5c0.6-0.2,1-0.8,0.8-1.4\"></path>\r\n               <path fill=\"#ffffff\" stroke=\"#0a0a0a\"\r\n                     d=\"M82.5,45.9c0,0.5,0.1,0.9,0.5,1.3c0.4,0.4,1,0.6,1.6,0.3c0.3-0.1,0.5-0.3,0.7-0.4c0.5-0.2,1.2,0.1,1.5,0.6 c0.3,0.5,0.3,1,0.3,1.6c0.6-0.6,1-1.4,1.3-2.2c0.2-0.7,0.4-1.5,0.2-2.2c-0.2-0.7-0.8-1.3-1.5-1.5c-0.9-0.2-1.8,0.2-2.5,0.7\"></path>\r\n               <path fill=\"#ffffff\" stroke=\"#0a0a0a\"\r\n                     d=\"M96.8,44.1c0.1,0.7,0.1,1.4-0.2,2c-0.3,0.6-0.9,1-1.5,0.7c-0.3-0.1-0.5-0.4-0.8-0.4c-0.6-0.2-1.2,0.3-1.4,0.9 c-0.2,0.6-0.1,1.2-0.1,1.9c-0.6-0.7-1.2-1.5-1.6-2.3c-0.4-0.7-0.6-1.5-0.6-2.2c0-0.8,0.3-1.6,0.9-2c0.7-0.5,1.7-0.5,2.6-0.1\"></path>\r\n               <path fill=\"#28292f\"\r\n                     d=\"M85.3,37.2c0.1,0.3,1.2,0.2,2.5-0.3c1.3-0.4,2.2-1.1,2.1-1.4c-0.1-0.3-1.2-0.2-2.5,0.3 C86.1,36.3,85.2,36.9,85.3,37.2z\"></path>\r\n               <path fill=\"#0a0a0a\"\r\n                     d=\"M91.5,35c0.3,0.7,0,1.4-0.7,1.6c-0.6,0.2-1.3-0.1-1.6-0.8c-0.2-0.6,0.1-1.3,0.7-1.6C90.6,33.9,91.3,34.3,91.5,35z\"></path>\r\n               <path fill=\"#0a0a0a\"\r\n                     d=\"M85.9,37c0.2,0.6-0.1,1.2-0.7,1.4c-0.6,0.2-1.3-0.1-1.5-0.6c-0.2-0.5,0.1-1.2,0.7-1.4C85,36.2,85.7,36.4,85.9,37z\"></path>\r\n               <path fill=\"none\" stroke=\"#0a0a0a\"\r\n                     d=\"M89.7,29c0.4,0.7-1.4,2.2-3.8,3.4c-2.5,1.2-4.7,1.7-4.9,1.2c-0.3-0.5,1.4-2,3.8-3.4S89.4,28.4,89.7,29z\"></path>\r\n\r\n            </g>\r\n         </svg>\r\n      </div>\r\n   )\r\n}","import {Dispatch} from \"redux\";\r\nimport {authAPI, profileAPI, RESULT_CODE, securityApi} from \"../../api/api\";\r\nimport {installCaughtError} from \"./app-reducer\";\r\nimport {PhotoType} from \"./profile-reducer\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppRootStateT} from \"../redux-store\";\r\n\r\nexport enum ACTION_TYPE_AUTH {\r\n   SET_USER_DATA = 'social_network/auth/SET_USER_DATA',\r\n   SET_RESULT_STATUS = 'social_network/auth/SET_RESULT_STATUS',\r\n   GET_CAPTCHA_SUCCESS = 'social_network/auth/GET_CAPTCHA_SUCCESS',\r\n   SET_PHOTO = 'social_network/auth/SET_PHOTO',\r\n   SET_LOGOUT = 'social_network/auth/SET_LOGOUT',\r\n}\r\n\r\nexport type FormDataType = {\r\n   email: string,\r\n   password: string,\r\n   remember: boolean\r\n   captcha: string\r\n}\r\n\r\nexport type UserDataType = {\r\n   id: number\r\n   email: string\r\n   login: string\r\n}\r\n\r\nexport type AuthStateType = {\r\n   userData: UserDataType | null\r\n   photo: PhotoType | null\r\n   isAuth: boolean\r\n   logout: boolean\r\n   statusMessages: string\r\n   resultStatusMessage: boolean\r\n   captchaUrl: string | null\r\n}\r\n\r\ntype ActionType = ReturnType<typeof setUserDataAC>\r\n   | ReturnType<typeof setStatusMessAC>\r\n   | ReturnType<typeof getCaptchaUrlSuccess>\r\n   | ReturnType<typeof setAuthorizedUserPhoto>\r\n   | ReturnType<typeof setLogout>\r\n\r\ntype ThunkActionT = ThunkAction<void, AppRootStateT, unknown, ActionType>\r\n\r\nconst initialState: AuthStateType = {\r\n   userData: null,\r\n   isAuth: false,\r\n   logout: false,\r\n   photo: null,\r\n   statusMessages: '',\r\n   resultStatusMessage: true,\r\n   captchaUrl: null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action: ActionType): AuthStateType => {\r\n   switch (action.type) {\r\n      case ACTION_TYPE_AUTH.SET_USER_DATA:\r\n         return {...state, userData: action.userData, isAuth: action.isAuth}\r\n\r\n      case ACTION_TYPE_AUTH.SET_RESULT_STATUS:\r\n         return {\r\n            ...state,\r\n            statusMessages: action.message,\r\n            resultStatusMessage: action.resultStatusMessage\r\n         }\r\n      case ACTION_TYPE_AUTH.GET_CAPTCHA_SUCCESS:\r\n         return {...state, captchaUrl: action.url}\r\n\r\n      case ACTION_TYPE_AUTH.SET_PHOTO:\r\n         return {...state, photo: action.photo}\r\n\r\n      case ACTION_TYPE_AUTH.SET_LOGOUT:\r\n         return {...state, logout: action.logout}\r\n\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\nexport const setUserDataAC = (userData: UserDataType | null, isAuth: boolean) => {\r\n   return {\r\n      type: ACTION_TYPE_AUTH.SET_USER_DATA,\r\n      userData,\r\n      isAuth,\r\n   } as const\r\n}\r\n\r\nconst setLogout = (logout: boolean) => {\r\n   return {\r\n      type: ACTION_TYPE_AUTH.SET_LOGOUT, logout\r\n   } as const\r\n}\r\n\r\nexport const setStatusMessAC = (message: string, resultStatusMessage: boolean) => ({\r\n   type: ACTION_TYPE_AUTH.SET_RESULT_STATUS,\r\n   message,\r\n   resultStatusMessage\r\n} as const)\r\n\r\nexport const getUserData = () => {\r\n   return async (dispatch: Dispatch<ActionType>) => {\r\n      const response = await authAPI.getUserData()\r\n\r\n      if (response.resultCode === 0) {\r\n         dispatch(setUserDataAC(response.data, true))\r\n\r\n         const authUserProfile = await profileAPI.getProfile(response.data.id)\r\n         dispatch(setAuthorizedUserPhoto(authUserProfile.photos))\r\n      }\r\n\r\n      response.resultCode !== 0 && dispatch(setStatusMessAC(response.messages[0], false))\r\n   }\r\n}\r\n\r\nexport const getCaptchaUrlSuccess = (url: string) => ({\r\n   type: ACTION_TYPE_AUTH.GET_CAPTCHA_SUCCESS,\r\n   url\r\n} as const)\r\n\r\nexport const setAuthorizedUserPhoto = (photo: PhotoType | null) => ({\r\n   type: ACTION_TYPE_AUTH.SET_PHOTO,\r\n   photo\r\n} as const)\r\n\r\nexport const login = (data: FormDataType): ThunkActionT => {\r\n   return async (dispatch) => {\r\n      const response = await authAPI.login(data)\r\n\r\n      response.resultCode !== RESULT_CODE.SUCCESSFULLY && dispatch(setStatusMessAC(response.messages[0], false))\r\n      response.resultCode === RESULT_CODE.CAPTCHA && await dispatch(getCaptchaUrl())\r\n\r\n      if (response.resultCode === RESULT_CODE.SUCCESSFULLY) {\r\n         dispatch(setStatusMessAC('Successful login', true))\r\n\r\n         dispatch(setLogout(false))\r\n\r\n         await dispatch(getUserData())\r\n      }\r\n   }\r\n}\r\n\r\nexport const logout = (): ThunkActionT => {\r\n   return async (dispatch) => {\r\n      const response = await authAPI.logout()\r\n\r\n      if (response.data.resultCode === RESULT_CODE.SUCCESSFULLY) {\r\n         dispatch(setUserDataAC(null, false))\r\n         dispatch(setAuthorizedUserPhoto(null))\r\n         dispatch(setLogout(true))\r\n      }\r\n\r\n      response.data.resultCode !== RESULT_CODE.SUCCESSFULLY && dispatch(installCaughtError(response.data.messages[0], 'warning'))\r\n   }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch: Dispatch<ActionType>) => {\r\n   const response = await securityApi.getCaptchaUrl()\r\n\r\n   dispatch(getCaptchaUrlSuccess(response.data.url))\r\n}"],"sourceRoot":""}