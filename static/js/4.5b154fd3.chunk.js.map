{"version":3,"sources":["components/Users/user.module.css","components/Users/Users.tsx","components/Users/UsersContainer.tsx"],"names":["module","exports","Users","props","isFetching","useSelector","state","usersPage","users","followingInProgress","dispatch","useDispatch","finalClassName","s","userMain","fetching","className","map","el","src","usersWrap","userControl","avatar","to","id","photos","small","alt","followed","Button","disabled","some","variant","color","onClick","unFollowSuccess","followSuccess","userContent","Paper","style","width","padding","display","justifyContent","elevation","userInfo","userName","name","userStatus","status","userLocation","userCountry","location","country","userCity","city","UsersContainer","currentPage","pageSize","totalUserCount","useEffect","getUsers","usersMainWrap","Preloader","onChange","page","defaultCurrent","defaultPageSize","total"],"mappings":"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","file":"static/js/4.5b154fd3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userMain\":\"user_userMain__1YJup\",\"avatar\":\"user_avatar__14SSM\",\"usersWrap\":\"user_usersWrap__2iJNF\",\"userControl\":\"user_userControl__2ibJj\",\"userContent\":\"user_userContent__3TBWG\",\"userName\":\"user_userName__lV0Do\",\"userCountry\":\"user_userCountry__3L1g-\",\"selectedPage\":\"user_selectedPage__3Khzo\",\"defaultCount\":\"user_defaultCount__2XEYf\",\"fetching\":\"user_fetching__2B9d9\",\"countWrap\":\"user_countWrap__3Oh9q\",\"usersMainWrap\":\"user_usersMainWrap__1LDni\",\"page\":\"user_page__-VJwd\",\"userLocation\":\"user_userLocation__2KprE\",\"countPageValue\":\"user_countPageValue__pDlb6\",\"pageNumber\":\"user_pageNumber__2Xnai\",\"userStatus\":\"user_userStatus__yJ8TK\"};","import React from \"react\";\r\nimport s from \"./user.module.css\";\r\nimport {followSuccess, unFollowSuccess, UserType} from \"../../redux/reducer/users-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {Paper} from \"@mui/material\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateT} from \"../../redux/redux-store\";\r\n\r\nexport const Users: React.FC = (props) => {\r\n   const isFetching = useSelector<AppRootStateT, boolean>(state => state.usersPage.isFetching)\r\n   const users = useSelector<AppRootStateT, UserType[]>(state => state.usersPage.users)\r\n   const followingInProgress = useSelector<AppRootStateT, number[]>(state => state.usersPage.followingInProgress)\r\n\r\n   const dispatch = useDispatch()\r\n\r\n   const defaultAvatar = (src: string | null) => src ? src : 'https://cdn3.iconfinder.com/data/icons/avatars-15/64/_Ninja-2-512.png'\r\n\r\n   const finalClassName = isFetching ? `${s.userMain} ${s.fetching}` : s.userMain\r\n\r\n   const onClickUnFollowHandler = (id: number) => dispatch(unFollowSuccess(id))\r\n\r\n\r\n   const onClickFollowHandler = (id: number) => dispatch(followSuccess(id))\r\n\r\n\r\n   return (\r\n      <div className={finalClassName}>\r\n         {\r\n            users.map(el => <div className={s.usersWrap} key={el.id}>\r\n               <div className={s.userControl}>\r\n                  <span className={s.avatar}>\r\n                     <NavLink to={`/profile/${el.id}`}>\r\n                        <img\r\n                           src={defaultAvatar(el.photos.small)}\r\n                           alt=\"avatar\"/>\r\n                     </NavLink>\r\n\r\n               </span>\r\n\r\n                  {el.followed\r\n                     ? <Button\r\n                        disabled={followingInProgress.some(id => id === el.id)}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={() => onClickUnFollowHandler(el.id)}>UnFollow</Button>\r\n                     : <Button\r\n                        disabled={followingInProgress.some(id => id === el.id)}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => onClickFollowHandler(el.id)}>Follow</Button>}\r\n               </div>\r\n\r\n               <div className={s.userContent}>\r\n                  <Paper style={{\r\n                     width: '100%',\r\n                     padding: '20px',\r\n                     display: 'flex',\r\n                     justifyContent: 'space-between'\r\n                  }} elevation={8}>\r\n                     <div className={s.userInfo}>\r\n                        <span className={s.userName}>{el.name}</span>\r\n                        <p className={s.userStatus}>{el.status || 'No status specified'}</p>\r\n                     </div>\r\n                     <div className={s.userLocation}>\r\n                   <span className={s.userCountry}>\r\n                     {el.location?.country || 'Country not specified'}</span>\r\n                        <span className={s.userCity}>{el.location?.city || 'City not specified'}</span>\r\n                     </div>\r\n                  </Paper>\r\n               </div>\r\n            </div>)\r\n         }\r\n      </div>\r\n   )\r\n}","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateT} from \"../../redux/redux-store\";\r\nimport {getUsers,} from \"../../redux/reducer/users-reducer\";\r\nimport React, {useEffect} from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport s from \"./user.module.css\";\r\nimport {Pagination} from 'antd';\r\n\r\nconst UsersContainer: React.FC = () => {\r\n   const currentPage = useSelector<AppRootStateT, number>(state => state.usersPage.currentPage)\r\n   const pageSize = useSelector<AppRootStateT, number>(state => state.usersPage.pageSize)\r\n   const totalUserCount = useSelector<AppRootStateT, number>(state => state.usersPage.totalUserCount)\r\n   const isFetching = useSelector<AppRootStateT, boolean>(state => state.usersPage.isFetching)\r\n\r\n   const dispatch = useDispatch()\r\n\r\n   useEffect(() => {\r\n      dispatch(getUsers(currentPage, pageSize))\r\n   }, [dispatch, currentPage, pageSize])\r\n\r\n\r\n   const onChangeCurrentPage = (page: number, pageSize: number) => {\r\n      if (page === 0) page = 1\r\n\r\n      dispatch(getUsers(page, pageSize))\r\n   }\r\n\r\n\r\n   return (\r\n      <div className={s.usersMainWrap}>\r\n         {isFetching && <Preloader/>}\r\n\r\n         <Pagination\r\n            onChange={onChangeCurrentPage}\r\n            defaultCurrent={1}\r\n            defaultPageSize={pageSize}\r\n            total={totalUserCount}/>\r\n\r\n         <Users/>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default UsersContainer"],"sourceRoot":""}